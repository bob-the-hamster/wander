# HamsterSpeak Plotscript for Wandering Hamster -- 2000 James Paige
#---------------------------------------------------------------------------
# Although Wandering Hamster is licenced under the GPL, this script
# file is licenced under the terms of the MIT license.
#
# Copyright (c) 2000-2017 James Paige
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#---------------------------------------------------------------------------

include, plotscr.hsd   #language definition
include, wander.hsi    #game-specific include
include, scancode.hsi  #keyboard constants

#---------------------------------------------------------------------------

global variable(1,shell game variable)
global variable(2,ship X)
global variable(3,ship Y)
global variable(4,baloon X)
global variable(5,baloon Y)
global variable(6,myrmidon X)
global variable(7,myrmidon Y)
global variable(8,myrmidon text)
global variable(9,under bridge)
global variable(10,Misa Saying)
global variable(11,hit golf ball too hard)
global variable(12,golf round)
global variable(13,golf hits)
global variable(14,golf total)
global variable(15,ship effect)
global variable(16,need air)
global variable(17,friar harvey ID)
global variable(18,friar cart ID)
global variable(19,skill point level display)
global variable(20,skill point bean count)
global variable(21,skill point cur)
global variable(22,skill point max)
global variable(23,breath memory)
global variable(24, breath bonus)

# Used by TMC's parallax voodoo
global variable(50, camera slice)
global variable(51, parallax camera follows hero)
global variable(52, next camera pixel x)
global variable(53, next camera pixel y)

# variables after 100 used for temporary fake-array
global variable(100,array)

#---------------------------------------------------------------------------

define constant(1, golf score timer)
define constant(2, jorm viking ship timer)
define constant(3, air timer)
define constant(4, troll mountain parallax timer)
define constant(5, splash animation timer)

define constant(0, str:golf swing)
define constant(1, str:golf score)
define constant(2, str:breath caption)
define constant(3, str:breath)
define constant(10, str:temp)
define constant(11, str:intobox)

#---------------------------------------------------------------------------

script, key wait, ticks, begin
  # Returns true if the wait was canceled by a keypress.
  show virtual gamepad
  return(false)
  variable(i)
  for(i, 1, ticks) do, begin
    wait(1)
    if(key is pressed(key:ENTER)) then(return(true), break)
    if(key is pressed(key:SPACE)) then(return(true), break)
    if(key is pressed(key:CTRL)) then(return(true), break)
    if(key is pressed(key:ALT)) then(return(true), break)
    if(key is pressed(key:ESC)) then(return(true), break)
    if(key is pressed(joy:button 1)) then(return(true), break)
    if(key is pressed(joy:button 2)) then(return(true), break)
  end
  auto virtual gamepad
end

script, key wait seconds, seconds, begin
  # Returns true if the wait was canceled by a keypress.
  exit returning(key wait(18 * seconds))
end

#---------------------------------------------------------------------------

plotscript, introduction, begin

 suspend npcs
 suspend player
 suspend box advance

 lock hero (hero:Bob the Hamster)

 variable(x,y)
 x:=hero X(leader)
 y:=hero Y(leader)

 # new-game fade-in cannot be supressed, so wipe out the palette
 tweak palette(-63,-63,-63) 

 # go to panning cutscene map
 teleport to map (map:Panning Cutscene Map,0,0)

 # start the intro music
 wait(1)
 play song (song:Title Theme)

 # wait for the musical flourish
 wait(22) 
 reset palette

 # Flanat Panorama
 load tileset (9)
 put camera (0,0)
 show text box (382)
 wait(6)
 fade screen in
 pan camera (east,7,1)
 wait for camera
 fade screen out
 advance text box

 # Bob vs Various Foes
 load tileset (10)
 put camera (0,10*20)
 show text box (383)
 wait(6)
 fade screen in
 wait(6)
 pan camera (east,9,2)
 wait for camera
 fade screen out
 advance text box

# # James with Bubbles
# load tileset (11)
# put camera (1*20,20*20)
# show text box (384)
# wait(6)
# fade screen in
# pan camera (east,7,2)
# wait for camera
# fade screen out
# advance text box

 # Penguin Pirate Ship
 load tileset (12)
 put camera (0,30*20)
 show text box (385)
 wait(6)
 fade screen in
 pan camera (east,5,1)
 wait for camera
 fade screen out
 advance text box

 # Skeppio and Rathmara
 load tileset (13)
 put camera (25*20,7*20)
 show text box (386)
 wait(6)
 fade screen in
 pan camera (north,7,1)
 wait for camera
 fade screen out
 advance text box

 # Hot Air Balloon
 load tileset (14)
 put camera (25*20,17*20)
 show text box (387)
 wait(6)
 fade screen in
 pan camera (south,15,2)
 wait for camera
 fade screen out
 advance text box

 # Ramparts
 load tileset (15)
 put camera (6*20,42*20)
 show text box (388)
 wait(6)
 fade screen in
 pan camera (west,6,1)
 wait for camera
 fade screen out
 advance text box

 # wait for music
 wait(20)

 # darken screen
 tweak palette(-60,-60,-60)
 # lighten text color
 tweak palette(60,60,60,15,15)

 teleport to map(map:Flanat Castle Area,0,0)
 put camera(17*20,72*20)
 play song (Song:Broaste's Madness)

 # create Broaste and troops 

 # Broaste
 write global(array+0,create NPC(14,24,67,north))
 # Myrmadons
 write global(array+1,create NPC(16,23,67,north))
 write global(array+2,create NPC(16,24,66,north))
 write global(array+3,create NPC(16,25,67,north))
 # Troops
 variable(loop)
 for(loop,0,2) do(write global(array+4+loop,create NPC(15,23,64+loop,north)))
 for(loop,0,2) do(write global(array+7+loop,create NPC(15,24,63+loop,north)))
 for(loop,0,2) do(write global(array+10+loop,create NPC(15,25,64+loop,north)))

 # make them march slowly
 alter NPC(14,NPCstat:movespeed,1)
 alter NPC(15,NPCstat:movespeed,1)
 alter NPC(16,NPCstat:movespeed,1)

 # slowly pan up
 pan camera (north,4,1)
 wait(1)

 # gradual fade in
 for(loop,-31,0) do(
   reset palette
   tweak palette(loop*2,loop*2,loop*2)
   update palette
   wait(2)
 )

 pan camera (north,16,2)
 wait(1)

 # prevent NPCs from bumping each other
 suspend obstruction

 # Move entire army north
 for(loop,0,12) do(
   walk NPC (read global(array+loop),north,10)
 )

 wait for camera
 pan camera (north,4,2)

 # gradual fade out
 for(loop,0,-31,-1) do(
   reset palette
   tweak palette(loop*2,loop*2,loop*2)
   update palette
   wait(2)
 )

 fade screen out
 reset palette

 # Broast confronts Hasim
 show text box (157)
 wait (1)
 fade screen in
 wait for key (use key)
 fade screen out (0,0,0)
 advance text box
 show text box (158)
 wait (1)
 fade screen in
 wait for key (use key)
 fade screen out (0,0,0)
 advance text box
 show text box (159)
 wait (1)
 fade screen in
 wait for key (use key)
 fade screen out (0,0,0)
 advance text box

 # Cut to Bob
 show text box (160)
 wait (1)
 play song (song:overworld music)
 fade screen in
 wait for key (use key)
 show text box (161)
 wait for key (use key)
 fade screen out (63,63,63)
 advance text box
 wait (1)

 camera follows hero
 teleport to map (5,x,y)

 fade screen in

 resume npcs
 resume player
 resume box advance
 resume obstruction

 set tag(tag:intro finished, ON)

end

#---------------------------------------------------------------------------

#NPC 16 is Lord Hasim
#NPC 29 is Lord Broaste

plotscript, Broaste Returns, begin
 suspend player
 suspend NPCs
 suspend random enemys
 show text box (83)
 wait for text box
 set NPC direction (16,south)
 walk hero (me,north,3)
 wait for hero (me)
 show text box (62)
 wait for text box
 wait (20)
 play song (Song:Broaste's Madness)
 set hero direction (me,south)
 wait (8)
 set hero direction (1,south)
 wait (8)
 set hero direction (2,south)
 wait (8)
 set tag(tag:Broaste is Back, ON)
 show text box (64)
 wait for text box
 walk hero (me, south, 3)
 wait for hero (me)
 show text box (199)
 wait for text box
 focus camera (NPC x(29), NPC y(29), 5)
 wait for camera
 camera follows NPC (29)
 walk NPC (29,north,3)
 wait for NPC (29)
 show text box (65)
 wait for text box
 add hero (hero:Lord Hasim)
 set tag(tag:Beat Broaste 2, ON)
 set tag(tag:Broaste is Back, OFF)
 fight formation (41)
 camera follows hero (me)
 play song (song:Triumphant Music)
 show text box (91)
 wait for text box
 walk hero (me,south,3) 
 wait for hero (me)
 delete hero (hero:Lord Hasim)
 use door (97)
 resume player
 resume NPCs
 resume random enemys
end

#---------------------------------------------------------------------------

plotscript, Fluffy-Mu, begin
  if (check tag(tag:joined cat's quest))
  then(
    if (check tag(tag:betrayed by cats))
    then(
      if (check tag(tag:fluffy sense sarcasm))
      then(
        # sense sarcasm
        show text box(316)
      )else(
        # Fluffy philosophise, Bob argue
        show text box(311)
        wait for text box()
        set tag(tag:fluffy sense sarcasm,ON)
      )
    )else(
      if (check tag(tag:fluffy predict Gisli))
      then(
        # rathmara: dont bother him
        show text box(310)
      )else(
        # Skeppio and Rathmara nervous, Fluffy-mu predicts Gisli
        show text box(303)
        wait for text box()
        set tag(tag:fluffy predict Gisli,ON)
      )
    )
  )else(
    #tell first fortune
    show text box(190)
  )
  wait for text box()
end

#---------------------------------------------------------------------------
# this script and the next one work together to make a simple mini-game
# where you pay 10$ and then try to guess which of five clam shells
# contains the 50$ pearl. It is dependent on NPCs already placed on the map

plotscript, shell game, begin
  # this variable is a loop counter
  if (checktag(tag:playing shell game))
  then,begin
    # already playing
    show text box (213)
  end
  else,begin
    # want to play?
    show text box (209)
    wait for text box
    if (checktag(tag:shell game choice)) then,begin
      if (pay money (10))
      then,begin

        variable (i,j) # loop counters

        suspend player
        suspend obstruction
        suspend NPC walls

        # reset shells just in case
        for (i,0,4) do(
          set NPC direction(NPC reference(1,i),north)
        )

        # create a temporary pearl NPC
        variable(pearl)
        pearl:=create NPC(2,8,5)

        # make sure the speed is right
        set NPC speed(pearl,10)

        # make all heros watch the pearl
        for (i,0,3) do(
          set hero direction(i,north)
        )

        # move the pearl over the shells
        walk NPC(pearl,north,3)
        walk NPC(pearl,west,3)
        wait for NPC(pearl)

        # open all the shells
        for (j,0,3) do,begin
          for (i,0,4) do(
            set NPC direction (NPC reference(1,i),j)
          )
          wait (2)
        )

        # randomize which direction you go first
        variable(X1, X2)
        if(random(false,true))
          then(X1:=1,X2:=9)
          else(X1:=9,X2:=1)

        # make the pearl dance back and forth
        walk NPC to X(pearl,X1)
        wait for NPC(pearl)
        walk NPC to X(pearl,X2)
        wait for NPC(pearl)

        # double speed!
        set NPC speed(pearl,20)

        # make the pearl dance back and forth more
        for (i,0,random(0,1)) do(
          walk NPC to X(pearl,X1)
          wait for NPC(pearl)
          walk NPC to X(pearl,X2)
          wait for NPC(pearl)
        )

        # quad speed! (does this work?)
        set NPC speed(pearl,40)

        # dance once more
        walk NPC to X(pearl,X1)
        wait for NPC(pearl)
        walk NPC to X(pearl,X2)
        wait for NPC(pearl)

        # pick a random shell
        shell game variable:=random(1,5)

        # get a reference to the chosen shell
        variable(chosen shell)
        chosen shell:=NPC reference(1,shell game variable--1)

        # choose an X position near the shell
        variable(near shell)
        near shell:=NPC X(chosen shell)+(random(-1,1)*2)
        if (near shell>>9) then(near shell:=9)
        if (near shell<<1) then(near shell:=1)

        # move the pearl near the chosen shell
        walk NPC to X(pearl,near shell)
        wait for NPC(pearl)

        # make pearl dissapear
        destroy NPC(pearl)

        # snap shells shut
        for (j,3,0,-1) do,begin
          for (i,0,4) do(
            set NPC direction (NPC reference(1,i),j)
          )
          wait (1)
        )

        set tag (tag:playing shell game,on)
        resume player
        resume obstruction
        resume NPC walls
      end
      else,begin
        # sorry not enough money
        show text box (208)
      end
    end
  end
end

# NPCs automatically pass a reference to themselves as the second
# script argument 
plotscript, pick a shell, arg, my shell, begin
 variable (i)
 if (check tag(tag:playing shell game))
 then(

   variable (pearl)

   suspend player
   suspend obstruction
   suspend NPC walls

   for (i,0,3) do,begin
     set NPC direction (my shell,i)
     wait (2)
   end

   variable (correct shell)
   correct shell:=NPC reference(1,shell game variable--1)

   if (my shell == correct shell)
   then,begin
     # congratulations!
     show text box (210)
     pearl:=create NPC(2,NPC X(my shell),NPC Y(my shell))
   end
   else,begin
     # sorry, you guessed wrong
     show text box (211)
     for (i,0,3) do,begin
       set NPC direction (correct shell,i)
       wait (1)
     end
     pearl:=create NPC(2,NPC X(correct shell),NPC Y(correct shell))
   end

   set NPC speed (pearl,4)

   walk NPC(pearl,north,1)
   wait for NPC(pearl)

   set NPC speed (pearl,10)

   if (my shell == correct shell) then(
     walk NPC(pearl,south,2)
   )else(
     for (i,3,0,-1) do,begin
       set NPC direction (correct shell,i)
       wait (1)
     end
     walk NPC to X(pearl,8)
     walk NPC to Y(pearl,5)
   )

   wait for NPC(pearl)

   destroy NPC (pearl)

   wait for text box

   for (i,3,0,-1) do,begin
     set NPC direction (my shell,i)
     wait (2)
   end

   resume player
   resume obstruction
   resume NPC walls

   set tag (tag:playing shell game,off)
   shell game variable:=zero

 end
 else,begin
   # pay before you play!
   show text box (212)
 end
end

#---------------------------------------------------------------------------

plotscript, Hide and Seek, begin
 variable (i)
 # Want to play hide and Seek?
 show text box (201)
 wait for text box
 if (check tag(tag:hide n seek)) then, begin
  show text box (204)
  wait for text box
  alter NPC (14,NPCstat:Script,none)
  set tag (tag:hide n seek, OFF)
  for (i,30,0,-1) do,begin
   # make sure you didnt go thru a door
   if (current map == 0)
   then, begin
    wait (9)
    show value (i)
   end
   else, begin
    show no value
   end
  end #for
  show no value
  # make sure you didnt go thru a door
  if (current map == 0)
  then, begin
   # ready or not, here I come!
   show text box (202)
   wait for text box
   alter NPC (14,NPCstat:MoveType,NPCmovetype:ChaseYou)
   alter NPC (14,NPCstat:Script,@Reset Hide and Seek)
   alter NPC (14,NPCstat:activation,NPCactivation:touch)
  end #then
 end #then
end #script

script,Reset Hide and Seek, begin
 alter NPC (14,NPCstat:MoveType,NPCmovetype:standstill)
 alter NPC (14,NPCstat:Script,@Hide and Seek)
 alter NPC (14,NPCstat:activation,NPCactivation:use)
 show text box (203)
end

#---------------------------------------------------------------------------

plotscript,Panic and Run Around,begin
 suspend player

 reset palette
 greyscale palette
 tweak palette(15,-10,-10)
 fade screen in

 set hero direction (me,west)
 walk hero (me,north,1)
 walk hero (me,west,1)
 wait for hero
 set hero direction (me,north)
 walk hero (me,north,1)
 wait for hero
 walk hero (me,north,1)
 walk hero (me,east,1)
 wait for hero
 set hero direction (me,east)
 walk hero (me,east,1)
 wait for hero
 walk hero (me,south,1)
 walk hero (me,east,1)
 wait for hero
 set hero direction (me,south)
 walk hero (me,south,1)
 wait for hero
 walk hero (me,south,1)
 walk hero (me,west,1)
 wait for hero
 set hero direction (me,west)
 walk hero (me,west,1)
 wait for hero

 reset palette
 fade screen in

get hero name(str:temp, find hero(hero by rank(0)))
show string(str:temp)
wait(20)
show no value

 resume player
end

#---------------------------------------------------------------------------

plotscript, Show Misa House, begin
 suspend player
 focus camera (41,23,5)
 wait (20)
 show text box (206)
 wait for camera
 wait for text box
 focus camera (hero X(me), hero Y(me) -- 3, 10)
 wait for camera
 camera follows hero (me)
 resume player
end

#---------------------------------------------------------------------------

plotscript, Misa Castle Hint, begin
  suspend player
  suspend NPCs
  variable(bobx, boby, bobd)
  variable(misa, misax, misay, misad)
  bobx := hero x(me)
  boby := hero y(me)
  bobd := hero direction(me)
  misa := NPC Reference(0)
  misax := NPC x(misa)
  misay := NPC y(misa)
  misad := NPC direction(misa)
  
  teleport to map(0, 41, 21)
  
  show text box(548)
  wait for text box

  suspend box advance
  show text box(549)

  focus camera(32, 21, 10)
  wait for camera
  focus camera(6, 5, 10)
  wait for camera

  resume box advance
  wait for text box
  
  camera follows hero(me)
  teleport to map(2, bobx, boby)
  set hero direction(me, bobd)

  suspend NPCs
  misa := NPC Reference(0)
  set NPC position(misa, misax, misay)
  set NPC direction(misa, misad)

  if(check tag(tag:plot boulders gone) == OFF) then(
    set tag(tag:saw plot boulders, ON)
  )
  show text box(408)
  wait for text box
  
  resume NPCs
  resume player
end

#---------------------------------------------------------------------------

plotscript, Sleep at the Inn, begin
 suspend player
 focus camera (hero x(me) + 1, hero y(me) -- 2,2)
 walk hero (me,east,2)
 wait for hero (me)
 walk hero (me,north,2)
 wait for hero (me)
 walk hero (me,west,3)
 wait for hero (me)
 suspend obstruction
 suspend caterpillar
 walk hero (me,north,1)
 walk hero (1,west,1)
 walk hero (2,north,1)
 walk hero (3,west,1)
 wait for hero (me)
 walk hero (me,west,1)
 walk hero (1,north,1)
 walk hero (2,east,1)
 walk hero (3,north,1)
 wait for hero (me)
 set hero direction (me,south)
 walk hero (1,east,1)
 set hero direction (2,south)
 set hero direction (3,west)
 wait for hero (1)
 set hero direction (1,south)

 if (room in active party == 0)
 then,begin
  set hero direction (3,west)
  wait (8)
  set hero direction (3,east)
  wait (8)
  set hero direction (3,west)
  wait (8)
  set hero direction (3,east)
  wait (12)
  set hero speed (2,10)
  walk hero (2,east,2)
  set hero direction (2,north)
  wait for hero (2)
  set hero speed (2,4)
  walk hero (3,east,1)
  wait for hero (3)
  set hero direction (3,south)
  wait (15)
  set hero direction (2,west)
 end

 play song (song:Sleeping Music)
 tweak palette(-40, -40, -10)
 fade screen in
 wait (18 * 3) # 3 seconds
 if (room in active party == 0)
 then,begin
  set hero speed (2,20)
  set hero speed (3,20)
  walk hero (3,east,1)
  wait for hero (3)
  walk hero (2,west,2)
  wait for hero (2)
  set hero direction (2,south)
  set hero direction (3,north)
  set hero speed (2,4)
  set hero speed (3,4)
  wait (1)
 end
 key wait seconds(8)
 reset palette
 fade screen in
 play song (song:Soldier's Chorus)
 wait (5)

 focus camera (hero x(me), hero y(me),10)
 wait for camera
 camera follows hero (me)
 walk hero (me,east,1)
 wait for hero (me)
 walk hero (me,south,1)
 walk hero (1,west,1)
 walk hero (2,west,1)
 wait for hero (me)
 walk hero (me,east,1)
 walk hero (1,south,1)
 set hero direction (2,south)
 wait for hero (me)
 walk hero (me,east,2)
 walk hero (1,east,2)
 wait for hero (me)
 walk hero (me,south,1)
 walk hero (1,east,1)
 walk hero (2,south,1)
 wait for hero (me)
 walk hero (me,south,2)
 walk hero (1,south,2)
 walk hero (2,east,1)
 wait for hero (2)
 walk hero (2,south,1)

 if (room in active party == 0)
 then,begin
  set hero direction (3,south)
  wait (5)
  set hero direction (3,west)
  wait (5)
  set hero direction (3,north)
  wait (5)
  set hero direction (3,east)
  wait (5)
  set hero direction (3,south)
  wait (5)
  set hero speed (3,10)
  walk hero (3,south,1)
  wait for hero (3)
  walk hero (3,west,1)
  wait for hero (3)
  set hero speed (3,4)
 end

 resume caterpillar
 resume obstruction
 resume player
end

#---------------------------------------------------------------------------

plotscript,die in battle,begin
 suspend player
 cancel air timer # It is okay to call this even on non-underwater maps
 play song (song:Game Over)
 show backdrop (19)
 wait for key (anykey)
 fade screen out (20,0,0)
 game over
end

#---------------------------------------------------------------------------

plotscript, Broaste Lackeys Block Castle,begin
 suspend player
 suspend obstruction
 pan camera (north,3,4)
 walk NPC (0,south,1)
 wait for NPC (0)
 walk NPC (0,south,1)
 walk NPC (6,south,1)
 wait for NPC (0)
 walk NPC (0,south,1)
 walk NPC (6,south,1)
 walk NPC (7,south,1)
 wait for NPC (0)
 walk NPC (6,west,1)
 walk NPC (7,south,1)
 wait for NPC (6)
 walk NPC (7,east,1)
 wait for NPC (7)
 wait (5)
 pan camera (south,3,4)
 wait for camera
 camera follows hero (me)
 show text box (5)
 wait for text box
 resume obstruction
 resume player
 end

#---------------------------------------------------------------------------

plotscript, fight broaste lackeys blocking castle, begin
 suspend player
 suspend obstruction
 if(fight formation(4)) then, begin
   # won
   show text box(12)
   variable(loop, dir)
   dir := south
   for(loop, 0, 24) do, begin
     dir := dir+1, mod, 4
     set NPC direction(0, dir)
     set NPC direction(6, dir)
     set NPC direction(7, dir)
     wait(1)
   end
   destroy NPC(0)
   destroy NPC(6)
   destroy NPC(7)
   set tag(6, ON)
   wait for text box
 end, else, begin
   # ran away
   set hero speed(0, 10)
   walk hero(0, south, 4)
   wait for hero(0)
   set hero speed(0, 4)
   walk hero(0, south, 1)
   wait for hero(0)
   set hero direction(0,west)
   suspend caterpillar
   walk hero(1, south, 1)
   walk hero(1, west, 1)
   wait(2)
   set hero direction(0, north)
   wait for hero(1)
   set hero direction(1, east)
   wait(2)
   set hero direction(1, north)
   resume caterpillar
 end
 resume obstruction
 resume player
end

#---------------------------------------------------------------------------

plotscript,Flanat Castle Area Autorun,begin
  if (check tag(tag:intro finished)) then(
    if (check tag(tag:spoke to guards)) then,begin
      set NPC position (0,24,55)
      set NPC position (6,23,54)
      set NPC position (7,25,54)
      set NPC direction (6,west)
      set NPC direction (7,east)
    end
    if(check tag(tag:saw plotrock mover)==OFF,and,hero Y(me)>>40) then,begin
      # the reason we check the hero's Y value is so that this
      # script will only be triggered if we enter the map from the normal
      # entrance in the south, and not via the warp-outhouse in the north
      Plot Boulder Mover
    end
    if(check tag(tag: flanat rope ladder)) then, begin
      lower flanat castle rope ladder(true)
    end
  end
end

#---------------------------------------------------------------------------

script, Plot Boulder Mover, begin
  
  variable(Mover,Rock)

  Mover:=NPC reference(13)
  Rock:=NPC at spot(38,91)

  set NPC position(Mover,42,95)
  set NPC position(Rock,41,95)
  set NPC direction(Mover,west)
  set NPC direction(Rock,west)
  set NPC speed    (Rock,2)

  suspend player
  suspend obstruction

  walk hero        (me,west,1)

  set NPC speed    (Mover,5)
  walk NPC         (Mover,south,1)
  wait for NPC     (Mover)
  walk NPC         (Mover,west,1)
  wait for NPC     (Mover)
  set NPC speed    (Mover,2)
  walk NPC         (Mover,north,1)
  wait             (1)
  walk NPC         (Rock,north,1)
  wait for NPC     (Rock)
  set NPC speed    (Mover,5)
  walk NPC         (Mover,east,1)
  wait for NPC     (Mover)
  walk NPC         (Mover,north,1)
  wait for NPC     (Mover)
  set NPC speed    (Mover,2)
  walk NPC         (Mover,west,2)
  wait             (1)
  walk NPC         (Rock,west,2)
  wait for NPC     (Rock)
  set NPC speed    (Mover,5)
  walk NPC         (Mover,south,1)
  wait for NPC     (Mover)
  walk NPC         (Mover,west,1)
  wait for NPC     (Mover)
  set NPC speed    (Mover,2)
  walk NPC         (Mover,north,3)
  wait             (1)
  walk NPC         (Rock,north,3)
  wait for NPC     (Rock)
  set NPC speed    (Mover,5)
  walk NPC         (Mover,east,1)
  wait for NPC     (Mover)
  walk NPC         (Mover,north,1)
  wait for NPC     (Mover)
  set NPC speed    (Mover,2)
  walk NPC         (Mover,west,1)
  wait             (1)
  walk NPC         (Rock,west,1)
  wait for NPC     (Rock)
  set NPC direction(Mover,south)


  resume player
  resume obstruction

  set tag(tag:saw plotrock mover,ON)

end

#---------------------------------------------------------------------------

plotscript,Broaste Castle Inn,begin
  suspend player
  walk hero to X (me,55)
  wait for hero (me)
  walk hero to Y (me,42)
  wait for hero (me)
  walk hero (me,left,2)
  wait for hero (me)
  walk hero (me,up,2)
  wait for hero (me)
  walk hero (me,right,4)
  wait for hero (me)

  play song (song:Sleeping Music)
  tweak palette (-40, -40, -10)
  fade screen in

  variable (i, ticks, total)
  for (i,0,18) do, begin
    set hero direction (random(0,3),random(0,3))
    wait (4)
    total += 4
    end

  key wait (18 * 8 -- total)
  reset palette
  fade screen in
  play song (song:Royal March)
  wait (5)

  for (i,0,3)
  do,begin
    set hero direction (i,south)
    end

  walk hero (me,right,1)
  wait for hero (me)
  walk hero (me,down,2)
  wait for hero (me)
  walk hero (me,left,3)
  wait for hero (me)
  walk hero (me,down,3)
  wait for hero (me)
  resume player
end

#---------------------------------------------------------------------------

plotscript, Ixnekolan Inn,begin
  if(check tag(tag:Rathmara in party)) then(
    Ixnekolan Inn with Cats
    exit script
  )
  variable (i)
  suspend player
  walk hero to X (me,32)
  wait for hero (me)
  show text box (217)
  suspend caterpillar
  for (i,0,3) do(
    set hero direction (i,west)
  )
  resume caterpillar
  wait for text box
  wait (8)
  set hero speed (me,2)
  walk hero (me,west,1)
  wait for hero (me)
  set hero speed (me,4)
  walk hero to Y (me,4)
  wait for hero (me)
  walk hero (me,north,2)
  wait for hero (me)
  walk hero (me,east,3)
  wait for hero (me)

  suspend caterpillar
  walk hero (me,north,1)
  walk hero (me,east,1)
  walk hero (1,north,1)
  walk hero (2,north,1)  
  walk hero (2,west,1)  
  walk hero (3,west,1)
  wait for hero (me)

  for (i,0,3) do(
    set hero direction (i,east)
  )

  play song (song:Sleeping Music)
  tweak palette(-40, -40, -10)
  fade screen in
  key wait seconds (11)
  reset palette
  fade screen in
  play song (song:Ruin Exploration)
  wait (5)

  resume caterpillar
  resume player
end

plotscript, Ixnekolan Inn With Cats, begin
  suspend player
  walk hero to X (me,32)
  wait for hero (me)
  show text box (643)
  suspend caterpillar
  variable(who)
  for (who,0,3) do(
    set hero direction (who,west)
  )
  resume caterpillar
  wait for text box
  wait (8)
  walk hero to Y(me, 6)
  wait for hero(me)
  walk hero to X(me, 35)
  wait for hero(me)

  suspend caterpillar
  walk hero (0,north,1)
  walk hero (0,east,1)
  walk hero (1,north,1)
  walk hero (2,south,1)  
  walk hero (2,east,1)  
  walk hero (3,south,2)
  wait for hero (3)
  set hero direction(0, south)
  set hero direction(1, south)
  set hero direction(2, south)
  walk hero(3, east, 2)
  wait for hero(3)
  walk hero(3, north, 1)
  walk hero(3, east, 1)
  wait for hero(3)
  set hero direction(3, south)

  play song (song:Sleeping Music)
  tweak palette(-40, -40, -10)
  fade screen in
  key wait seconds (11)
  reset palette
  fade screen in
  play song (song:Ruin Exploration)
  wait (5)

  resume caterpillar
  resume player
end

#---------------------------------------------------------------------------

plotscript,Cactus sighting in Flanat,begin
  variable(mus)
  mus := current song
  play song(song:Cactus Theme)

  variable (cactus)
  cactus:=NPC reference(10)

  set NPC position (cactus,19,26)
  walk NPC (cactus,east,3)
  wait for NPC (cactus)
  walk NPC (cactus,west,4)
  wait for NPC (cactus)
  set NPC speed (cactus,10)
  walk NPC to X (cactus,10)
  wait for NPC (cactus)
  walk NPC to Y (cactus,21)
  wait for NPC (cactus)
  walk NPC to X (cactus,0)
  wait for NPC (cactus)
  set NPC position (cactus,0,0)
  set tag (tag:flanat cactus,ON)
  
  play song(mus)
end

#---------------------------------------------------------------------------

plotscript,Cactus Sighting on Mountain,begin

  variable(mus)
  mus := current song
  play song(song:Cactus Theme)

  variable (i)
  suspend player
  suspend random enemys
  suspend NPCs
  suspend NPC walls

  for (i,0,3) do (set hero direction (i,north))
  Pan Camera (north,6,2)
  show text box (228)
  wait for all
  advance text box
  walk NPC (17,up,2)
  walk NPC (17,left,2)
  wait for NPC (17)
  walk hero (me,north,5)
  walk NPC (17,left,1)
  wait for NPC (17)
  set NPC direction (17,right)
  wait (2)
  set NPC speed (17,10)
  walk NPC (17,up,1)
  walk NPC (17,left,1)
  wait for NPC
  for (i,0,3) do (set hero direction (i,left))
  walk NPC (17,left,1)
  wait for NPC
  walk NPC (17,south,1)
  walk NPC (17,left,1)
  wait for NPC
  focus camera(heroX(me),heroY(me),2)
  walk NPC (17,south,5)
  spin NPC (17,2,5)
  wait for NPC
  set tag (tag:Troll Mtn Cactus,ON)
  camera follows hero (me)
  
  resume player
  resume random enemys
  resume NPCs
  resume NPC walls
  play song(mus)
end

#---------------------------------------------------------------------------

script,Spin NPC,who,speed=2,turns=1,begin
  variable(i)
  for (i,1,turns) do,begin
    set NPC direction (who,(i,mod,4))
    wait (speed)
  end
end

#---------------------------------------------------------------------------

plotscript,World Map Autorun,begin
 if (check tag(tag:vehicle loc flag))
 then(
  set tag(tag:vehicle loc flag,OFF)
  #set NPC position(2,ship X,ship Y)
  #set NPC position(3,baloon X,baloon Y)
 )else(
  set tag(tag:vehicle loc flag,ON)
  ship X:=NPC X(2)
  ship Y:=NPC Y(2)
  baloon X:=NPC X(3)
  baloon Y:=NPC Y(3)
 )
 tweak bridges
end

#---------------------------------------------------------------------------

plotscript,Dismount Ship,begin
  ship X:=NPC X(2)
  ship Y:=NPC Y(2)
  play song(song:overworld music)
end

#---------------------------------------------------------------------------

plotscript,Mount Ship,begin
  play song(song:vehicle riding)
end

#---------------------------------------------------------------------------

plotscript,Dismount Baloon,begin
  baloon X:=NPC X(3)
  baloon Y:=NPC Y(3)
end

#---------------------------------------------------------------------------

plotscript,Myrmidon Suit,begin
  suspend player
  increment(myrmidon text)
  if (myrmidon text>>2)
     then (myrmidon text:=0)
  show text box (225+myrmidon text)
  wait for text box
  variable(m)
  m := open menu(menu:Myrmidon Suit)
  wait for menu(m)
  resume player
end

plotscript, do myrmidon dismount, begin
  wait(1)
  dismount vehicle
end

#---------------------------------------------------------------------------

plotscript,Mount Myrmidon,begin
  myrmidon text := 0
  if (check tag(tag:used myrmidon suit)==OFF) then(
    show text box(249)
    wait for text box
    set tag(tag:used myrmidon suit,ON)
  )
  alter NPC (4,NPCstat:picture,36)
end

#---------------------------------------------------------------------------

plotscript,Dismount Myrmidon,begin
  alter NPC (4,NPCstat:picture,19)
  Myrmidon X:=NPC X(4)
  Myrmidon Y:=NPC Y(4)
end

#---------------------------------------------------------------------------

plotscript,Broaste Castle Autorun,begin

 if (check tag(tag:myrmidon suit))
 then,begin
  alter NPC (4,NPCstat:picture,36)
 end

 if (check tag(tag:myrmidon loc flag))
 then,begin
  set NPC position(4,myrmidon X,myrmidon Y)
 end
 else,begin
  set tag(tag:myrmidon loc flag,ON)
  myrmidon X:=NPC X(4)
  myrmidon Y:=NPC Y(4)
 end

end

#---------------------------------------------------------------------------

plotscript,Broaste Castle Blocked Door,begin
  variable (i)
  suspend player
  suspend NPCs
  suspend obstruction
  suspend random enemys
  suspend caterpillar

  if (check tag(tag:Myrmidon Suit))

  then,begin
    set tag (tag:myrm block guard,ON)
    walk NPC (6,south,2)
    wait for NPC (6)
    walk hero (me,south,1)
    set hero direction (me,north)
    wait for hero (me)
    show text box (232)
    wait for text box
    set NPC direction (6,west)
    wait (2)
    walk NPC (6,north,2)
  end

  else,begin
    walk NPC (6,south,2)
    wait for NPC (6)
    for (i,0,3) do (
      set hero speed (i,10)
      walk hero (i,south,1)
    )
    walk hero (0,east,1)
    walk hero (1,west,1)
    walk hero (2,east,1)
    walk hero (3,west,1)
    for (i,0,3) do (
      set hero direction (i,north)
    )
    walk NPC (6,south,2)
    wait for NPC (6)
    walk NPC (6,north,3)
    wait for NPC (6)
    set NPC direction (6,east)
    wait (2)
    set NPC direction (6,south)
    show text box (231)
    wait for text box
    set NPC direction (6,west)
    wait (2)
    walk NPC (6,north,1)
    for (i,0,3) do (set hero speed (i,4))
  end

  resume player
  resume NPCs
  resume obstruction
  resume random enemys
  resume caterpillar
end

#---------------------------------------------------------------------------

plotscript,Attack Broaste Ghost,begin
  if (check tag(tag:have teddy bear))
  then (Attack Broaste Ghost with Teddy)
  else (Attack Broaste Ghost sans Teddy)
end

#---------------------------------------------------------------------------

script,Attack Broaste Ghost sans Teddy,begin
  variable (i)
    set tag (tag:Broaste Ghost Script,ON)
    set tag (tag:Saw Broaste Ghost,ON)
    suspend player
    suspend NPCs
    set NPC position (0,7,0)
    stop song
    show text box (220)
    wait for text box
    walk hero to X (me,7)
    walk hero (me,north,1)
    wait for hero (me)
    walk hero (me,north,2)
    wait for hero (me)
    play song (song:Broaste's Madness)
    pan camera (north,2,4)
    wait for camera
    fade screen out (0,0,20)
    suspend NPC walls
    set NPC speed (0,20)
    walk NPC (0,south,2)
    wait for NPC (0)
    set NPC speed (0,5)
    fade screen in
    set NPC direction (0,north)
    for (i,0,7)
        do (set NPC frame (0,(i,mod,2)),wait (2))
    set NPC speed (0,2)
    walk NPC (0,south,1)
    show text box (221)
    wait (2)
    if (check tag (tag:myrmidon suit))
       then (
         dismount vehicle
         walk hero (1,south,1)
         set hero direction (1,north)
         set NPC speed (4,5)
         walk NPC (4,west,2)
         walk NPC (4,south,2)
         spin NPC (4,1,8)
         wait for NPC (4)
         set NPC speed (4,0)
         set NPC position (4,28,4)
         Myrmidon X:=28
         Myrmidon Y:=4
       )
    wait for text box
    set NPC speed (0,10)
    walk NPC (0,south,3)
    walk NPC (0,west,3)
    wait for NPC (0)
    walk NPC (0,east,3)
    wait for NPC (0)
    set NPC direction (0,north)
    set death script (@null death script)
    fight formation (83)
    camera follows hero (me)
    Set NPC position (0,7,4)
    set NPC direction (0,south)
    wait (3)
    show text box (223)
    wait for text box
    walk NPC (0,north,4)
    set NPC direction (0,south)
    show text box (224)
    wait for text box
    set hero speed (me,5)
    walk hero (me,south,6)
    wait for hero (me)
    set hero speed (me,4)
    walk hero (me,south,1)
    wait for hero (me)
    set death script (@die in battle)
    resume NPC walls     
    resume player
    resume NPCs
    set tag (tag:Broaste Ghost Script,OFF)
end

#---------------------------------------------------------------------------

script,Attack Broaste Ghost with Teddy,begin
  variable(remember weapon,Bob,Misa,Broaste,i,j)

  Broaste:=NPC reference(0)

  set tag (tag:Broaste Ghost Script,ON)
  suspend player
  suspend NPCs
  suspend NPC walls
  suspend obstruction

  set NPC position  (Broaste,7,0)
  set NPC direction (Broaste,south)
  dismount vehicle

  walk hero to X (me,7)
  walk hero      (me,north,4)
  wait for hero
  suspend caterpillar
  play song      (song:Broaste's Madness)

  set NPC speed     (Broaste,5)
  walk NPC          (Broaste,south,2)
  pan camera        (north,1,2)
  wait for NPC

  show text box     (259)
  set NPC speed     (Broaste,1)
  walk NPC          (Broaste,south,1)
  wait for text box
  wait for NPC      (Broaste)

  show text box     (260)
  wait for text box

  show text box     (261)
  Set NPC speed     (Broaste,5)
  walk NPC          (Broaste,north,1)
  wait for NPC      (Broaste)
  set NPC direction (Broaste,west)
  wait for text box

  show text box     (262)

  for(i,0,8) do,begin
    for(j,1,3,2) do,begin
      set NPC direction (Broaste,j)
      wait              (2)
    end
  end

  wait for text box

  set NPC speed (Broaste, 4)
  walk NPC      (Broaste, south ,1)
  walk NPC      (Broaste, east  ,1)
  wait for NPC  (Broaste)
  suspend box advance
  show text Box (263)
  walk NPC      (Broaste, south ,2)
  walk NPC      (Broaste, west  ,2)
  wait for NPC  (Broaste)
  walk hero          (0,south,1)
  set hero direction (0,north)
  walk hero          (1,east,1)
  set hero direction (1,north)
  walk NPC      (Broaste, south ,1)
  walk NPC      (Broaste, east  ,1)
  wait for NPC  (Broaste)
  wait for hero (0)
  resume box advance

  wait for text box

  show text box (264)
  wait for text box

  Bob:=find hero(hero:Bob the Hamster)
  remember weapon:=check equipment(Bob,slot:weapon)

  if (remember weapon<>item:teddy) then,begin
    show text box (266)
    wait for text box
  end

  force equip    (Bob,slot:weapon,item:teddy)
  set NPC position (Broaste,0,1)
  fight formation(78)
  unequip        (Bob,slot:weapon)
  delete item    (item:teddy)

  if (remember weapon<>item:teddy) then, begin
    force equip    (Bob,slot:weapon,remember weapon)
  end

  play song (song:Triumphant Music)

  # hack in case the myrmidon suit is already in a bad place
  if(myrmidon x == 0 && myrmidon y == 0) then, begin
    myrmidon y := 1
    set NPC position(4, 0, 1)
  end

  Bob:=rank in caterpillar(hero:Bob the Hamster)
  Misa:=rank in caterpillar(hero:Misa DuHamstre)

  pan camera (north,1,2)

  set hero speed (Misa,2)
  walk hero to X (Misa,7)
  walk hero      (Misa,north,1)
  wait for hero  (Misa)

  wait for camera
  camera follows hero (Misa)

  set hero speed (Misa,5)
  walk hero      (Misa,north,3)
  wait for hero  (Misa)

  show text box (267)

  set hero direction (Misa,west)
  wait               (1)
  set hero direction (Misa,south)

  wait for text box 

  show text box  (268)

  focus camera(hero X(Misa),hero Y(Misa),10)

  wait for camera

  set hero speed (Misa, 10)
  suspend hero walls

  for(i,0,6) do,begin
    walk hero          (Misa,north,1)
    set hero direction (Misa,south)
    wait for hero      (Misa)
    walk hero          (Misa,south,1)
    wait for hero      (Misa)
    wait               (2)
  end
  
  resume hero walls  

  wait for text box

  show text box (269)
  set hero speed (Bob,2)
  walk hero (Bob, north,2)
  wait for text box
  wait for hero (Bob)

  wait (8)

  show text box (271)
  for (i,0,1) do,begin
    set hero direction (Misa,east)
    wait (2)
    set hero direction (Misa,south)
    wait (2)
    set hero direction (Misa,west)
    wait (2)
    set hero direction (Misa,south)
    wait (2)
  end
  wait for text box

  set hero speed (Misa,4)
  walk hero      (Misa,south,1)
  wait for hero  (Misa)
  set hero direction (Misa,west)
  wait (1)
  set hero direction (Misa,north)

  show text box (274)
  wait for text box

  show text box (275)

  wait for camera
  wait for text box

  set hero speed (Bob,4)
  walk hero (Bob, south, 3)
  wait for hero (Bob)

  play song (song:Sleeping Music)

  fade screen out
  wait(1)

  set hero position (Bob,57,40)
  set hero direction (Bob,west)

  swap out hero (hero:Misa DuHamstre)
  lock hero     (hero:Misa DuHamstre)
  set tag       (tag:Misa took Castle,ON)
  Misa Saying := 0

  set tag (tag:Beat Broaste Ghost,ON)

  camera follows hero (me)
  resume caterpillar

  reset palette
  tweak palette (-40, -40, -10)
  fade screen in

  key wait seconds (9)

  reset palette
  fade screen in
  play song (song:Royal March)

  resume player
  resume NPCs
  resume NPC walls
  resume obstruction
  set tag (tag:Broaste Ghost Script,OFF)
end

#---------------------------------------------------------------------------

script,null death script,begin
  variable (i)
  for (i,0,3)
      do (set hero stat (i,stat:hp,1))
end

#---------------------------------------------------------------------------

plotscript, tweak bridges, flag=0, begin
  if (flag==1) then (under bridge:=true)
  if (flag==2) then (under bridge:=false)
  if (under bridge)
  then(write pass block (144,7,northwall+southwall+overhead tile) )
  else(write pass block (144,7,eastwall+westwall) )
end

#---------------------------------------------------------------------------

plotscript, steal Grueber's lunch, begin
  suspend player
  if (check tag(tag:stole lunch))
  then(
    show text box (237)
    wait for text box
  )
  else(
    if (check tag (tag:steal lunch))
    else(
      show text box (235)
      wait for text box
    )
    if (check tag (tag:steal lunch))
    then(
      set hero direction (me,east)
      wait (2)
      set hero direction (me,south)
      wait (2)
      set hero direction (me,west)
      wait (3)
      set hero direction (me,south)
      wait (2)
      set hero direction (me,east)
      wait (2)
      set hero direction (me,north)
      wait (1)
      if (((NPC Y(8)>>75) and (NPC direction(8)<>north)) or ((NPC X(8)>>14)and(NPC direction(8)<>west)))
      then(
        suspend caterpillar
        suspend hero walls
        suspend obstruction
        set hero speed (me,5)
        walk hero (me,north,1)
        wait for hero (me)
        walk hero (me,south,1)
        set hero direction(me,north)
        wait for hero (me)
        set hero speed (me,4)
        resume obstruction
        resume hero walls
        resume caterpillar
        show text box (239)
        get item(item:carrot,3)
        wait for text box
        set tag(tag:stole lunch,ON)
      )
      else(
        show text box (238)
        wait for text box
        set tag(tag:steal lunch,OFF)
      )
    )
    else(
      show text box (236)
      wait for text box
    )
  )
  resume player
end

#---------------------------------------------------------------------------

plotscript,scared by myrmidon,begin
  suspend player
  walk hero (me,north,3)
  wait for hero(me)
  show text box(247)
  wait for text box
  set hero speed(me,5)
  walk hero (me,south,4)
  wait for hero(me)
  set hero speed (me,4)
  walk hero (me,south,1)
  wait for hero(me)
  suspend caterpillar
  walk hero(1,south,1)
  wait for hero(1)
  walk hero(1,west,1)
  set hero direction(me,west)
  wait for hero(1)
  set hero direction(1,south)
  wait(1)
  set hero direction(1,east)
  wait(5)
  set hero direction(0,north)
  set hero direction(1,north)
  wait(5)
  set hero direction(0,west)
  set hero direction(1,east)
  wait(2)
  show text box(248)
  wait for text box
  resume caterpillar
  walk hero(me,north,1)
  wait for hero(me)
  resume player
end

#---------------------------------------------------------------------------

plotscript,castle break wall,begin
  write map block(70,26,57)
  write pass block(70,26,west wall+east wall)
  set NPC position(17,69,26)
  set tag(tag:broke castle wall,ON)
end

#---------------------------------------------------------------------------

plotscript,Dusty Leaves,begin
  if(check tag(tag:dusty left angry)) then(
    exit script
  )
  
  suspend player
  suspend obstruction
  suspend caterpillar

  show text box(135)
  wait for text box
  set tag(tag:took Dusty Home,ON)

  variable(dusty)
  dusty:=rank in caterpillar(hero:dusty)

  walk hero to Y (dusty,11)
  wait for hero  (dusty)
  walk hero to X (dusty,12)
  wait for hero  (dusty)
  walk hero to Y (dusty,10)
  wait for hero  (dusty)

  swap out hero (hero:dusty)
  lock hero(hero:dusty)

  resume caterpillar
  resume obstruction
  resume player
end

#---------------------------------------------------------------------------

plotscript,Dusty Leaves Angry,begin
  suspend player
  suspend obstruction
  suspend caterpillar

  variable(dusty)
  dusty:=rank in caterpillar(hero:dusty)


  walk NPC to X (dusty,14)
  wait for hero  (dusty)
  walk hero to Y (dusty,14)
  wait for hero  (dusty)
  walk hero to X (dusty,12)
  wait for hero  (dusty)

  set hero direction(rank in caterpillar(hero:Bob the Hamster),west)
  set hero direction(rank in caterpillar(hero:Misa DuHamstre),west)

  show text box(182)
  wait for text box

  set tag(tag:Dusty left Angry,ON)
  swap out hero (hero:dusty)
  lock hero(hero:dusty)

  resume caterpillar
  resume obstruction
  resume player
end

#---------------------------------------------------------------------------

plot script,fade and rest,begin
  suspend player
  variable(remember song)
  remember song := current song
  play song(song:Sleeping Music)
  tweak palette (-40, -40, -10)
  fade screen in
  key wait seconds (11)
  reset palette
  fade screen in
  if(remember song == 0)
    then(stop song)
    else(play song(remember song))
  wait (5)
  resume player
end

#---------------------------------------------------------------------------

plotscript,Dustys Equipment,begin
  suspend NPCs
  variable(Dusty,slot,box)
  dusty:=find hero(hero:Dusty)
  box:=139
  for(slot,2,5) do,begin
    if (check equipment(dusty,slot)>=0)
    then,begin
      unequip(Dusty,slot)
      box:=258
    end
  end
  show text box(box)
  wait for text box
  resume NPCs
end

#---------------------------------------------------------------------------

plotscript,Fight Arch Guardians,begin
  variable(guard1,guard2,suit,loop)
  guard1:=NPC reference(24)
  guard2:=NPC reference(25)
  suit:=NPC reference(4)

  suspend player
  suspend NPCs
  suspend random enemys
  suspend obstruction
  suspend caterpillar

  walk hero(me,north,1)
  wait for hero(me)

  show text box (278)
  play song (song:castle battle)

  set NPC position(guard1,93,12)
  set NPC position(guard2,93,11)
  walk NPC (guard1,south,5)
  walk NPC (guard2,south,6)
  wait for NPC (guard1)
  walk NPC (guard1,south,1)
  walk NPC (guard1,east,1)
  wait for NPC (guard1)
  set NPC direction (guard1,south)
  walk NPC (guard2,south,1)
  walk NPC (guard2,west,1)
  wait for NPC (guard2)
  set NPC direction (guard2,south)

  wait for text box

  walk hero(me,north,1)
  wait for hero(me)
  
  set NPC speed(guard1,10)
  set NPC speed(guard2,10)
  walk NPC (guard1,south,1)
  walk NPC (guard2,south,1)
  walk NPC (guard1,west,1)
  walk NPC (guard2,east,1)
  wait for NPC (guard1)

  set NPC speed (guard1,4)
  set NPC speed (guard2,4)
  walk NPC (guard1,north,1)
  walk NPC (guard2,north,1)
  walk NPC (guard1,east,1)
  walk NPC (guard2,west,1)
  set NPC direction (guard1,south)
  set NPC direction (guard2,south)

  dismount vehicle
  if (hero Y(0)==hero Y(1)) then,begin
    walk hero(1,south,1)
    set hero direction (1,north)
  end

  set NPC speed (suit,10)
  walk NPC (suit,south,3)

  for(loop,0,5) do,begin
    set NPC direction (suit,(loop,mod,4))
    wait(1)
  end

  set NPC position (suit,0,0)
  Myrmidon X:=0
  Myrmidon Y:=1

  fight formation (84)

  set tag(tag:beat arch guardians,ON)

  resume player
  resume NPCs
  resume random enemys
  resume obstruction
  resume caterpillar

end

#---------------------------------------------------------------------------

plotscript,World Map Afterbattle,begin
  if (check tag(tag:Riding the Ship)) then,begin
    play song(song:vehicle riding)
  end
  tweak bridges
end

#---------------------------------------------------------------------------

plotscript,Cyclic Misa Saying,begin
  show text box(283+Misa Saying)
  wait for text Box
  increment(Misa Saying,1)
  if (Misa Saying >> 3 || Misa Saying << 0) then(Misa Saying:=0)
end

#---------------------------------------------------------------------------

plotscript,Cats Enlist Bob,begin
  variable(Bob,skeppio,rathmara,guard)
  Bob:=me
  skeppio:=NPC reference(27)
  rathmara:=NPC reference(28)
  guard:=NPC reference(22)

  suspend player
  suspend NPCs
  suspend obstruction

  suspend NPC walls

  stop song

  set NPC speed(guard,5)
  walk NPC to X(guard,5)
  walk NPC to Y(guard,5)

  pan camera(south,1,4)  

  wait for camera

  play song(song: Ruin Exploration)

  set NPC position(skeppio,hero X(me),14)
  set NPC position(rathmara,hero X(me),15)

  walk NPC (skeppio,north,4)
  walk NPC (rathmara,north,4)

  wait for NPC (skeppio)

  resume NPC walls

  show text box(287) # stand aside

  camera follows NPC(skeppio)

  set hero speed(Bob,10)
  walk hero to X(Bob,9)
  set hero direction(Bob,west)

  walk NPC(skeppio,north,1)
  walk NPC(rathmara,north,1)
  walk NPC(guard,north,1)
  wait for NPC(skeppio)
  set NPC direction(guard,south)

  walk NPC(skeppio,north,3)
  walk NPC(rathmara,north,3)

  wait for NPC(skeppio)

  set hero speed(Bob,4)

  pan camera (north,2,4)

  walk NPC to X(skeppio,6)
  walk NPC to X(rathmara,7)
  walk NPC (rathmara,north,1)
  wait for NPC(skeppio)
  set NPC direction (skeppio,north)
  wait for NPC(rathmara)
  set NPC direction (rathmara,north)

  wait for text Box

  show text box(288) #Misa says Broaste is gone

  walk hero(Bob,north,5)
  wait for hero (Bob)
  set hero direction (Bob,west)
  wait (2)
  set hero direction (Bob,south)

  wait for text box

  wait (5)
  set NPC direction(skeppio,east)
  set NPC direction(rathmara,west)
  wait (3)
  set NPC direction(skeppio,north)
  set NPC direction(rathmara,north)
  wait (3)
  set NPC direction(skeppio,east)
  set NPC direction(rathmara,west)

  show text box(289) #whisper
  wait for text box

  set NPC direction(skeppio,north)
  set NPC direction(rathmara,north)
  wait (5)

  show text box(290) #cats introduce themselves
  wait for text box

  show text box(291) #Misa has no army
  wait for text box
  
  walk NPC (rathmara,east,1)
  walk NPC (rathmara,north,1)
  wait for NPC(rathmara)

  show text box(292) #Rathmara asks Bob for help

  set hero speed(Bob,10)
  walk hero (Bob, north,1)
  walk hero (Bob, west,1)
  set hero direction(Bob,south)
  wait for hero(Bob)
  walk hero (Bob,south,1)
  wait for hero(Bob)
  set hero speed(Bob,4)

  wait for text box
  
  show text box(293)# prompt for pay
  wait for text box

  if (check tag(tag: asked for 300)) then,begin

    show text box(294)# offers 300
    wait for text box

    show text box(295)# prompt for more pay
    wait for text box

    get money (300)

    if (check tag(tag: asked for 500)) then,begin
      
      show text box(296)# offers 500
      wait(3)
      set NPC direction(rathmara,east)
      wait(3)
      set NPC direction(rathmara,north)
      wait for text box

      get money (200)
      
    end
    
  end

  show text box(297) # accept
  wait for text box

  fade screen out(0,0,0)

  camera follows hero(me)

  add hero(hero:skeppio)
  add hero(hero:rathmara)

  set tag(tag:Joined Cat's Quest,ON)

  teleport to map(map:Broaste's Courtyard,16,13)

  walk hero(me,south,2)

  fade screen in

  show text box(298)

  wait for text box

  resume player
  resume NPCs
  resume obstruction
end

#---------------------------------------------------------------------------

plotscript, Rathmara Burn Log, begin

  variable(Bob, Skeppio, Rathmara)
  variable(loop)

  suspend player
  suspend caterpillar
  suspend NPCs
  suspend NPC walls
  suspend random enemys
  suspend obstruction

  if(check tag(tag:Rathmara in party))

  then(
    set tag(tag:Burned Gallopeg Log,ON)
    Bob:=rank in caterpillar(hero:Bob the Hamster)
    Skeppio:=rank in caterpillar(hero:Skeppio)
    Rathmara:=rank in caterpillar(hero:Rathmara)

    show text box(328)
    focus camera(73,39,5)
    wait for text box
    wait for camera

    set hero speed(Rathmara,2)

    walk hero to X(Bob,72)
    walk hero to Y(Bob,35)
    walk hero to X(Skeppio,73)
    walk hero to Y(Skeppio,35)
    walk hero to X(Rathmara,73)
    walk hero to Y(Rathmara,39)

    set hero speed (Bob,5)
    set hero speed (Skeppio,5)

    wait for hero(Bob)
    wait for hero(Skeppio)

    set hero speed (Bob,4)
    set hero speed (Skeppio,4)

    set hero direction (Bob,     west)
    set hero direction (Skeppio, east)
    wait(2)

    set hero direction (Bob,     south)
    set hero direction (Skeppio, south)

    wait for hero(Rathmara)

    set hero speed(Rathmara,4)

    wait(2)

    set hero direction (Rathmara,West)
    wait(2)

    set hero direction (Rathmara,South)
    wait(2)

    set hero direction (Rathmara,West)
    wait(1)

    walk hero(Rathmara,north,2)
    wait for hero(Rathmara)

    set hero direction (Rathmara,West)
    wait(1)
    
    set hero direction (Rathmara,South)
    wait(1)

    # Rathmara twitch
    for(loop,0,7)
    do(
      set hero frame (Rathmara,(loop,mod,2))
      wait(1)
    )

    set hero direction (Rathmara,West)
    wait(1)

    walk hero(Rathmara,north,1)
    wait for hero(Rathmara)

    set hero direction (Rathmara,West)
    wait(1)

    set hero direction (Rathmara,South)

    # Rathmara twitch more
    for(loop,0,13)
    do(
      set hero frame (Rathmara,(loop,mod,2))
      wait(1)
    )

    # flame variables
    variable(flame1,flame2,flame3,flame4)

    # set flame speed
    set NPC speed (2,5)

    # big flame
    flame1:=create NPC(2,hero X(rathmara),hero Y(rathmara)+1,0)
    walk NPC (flame1,south,3)
    set NPC direction(flame1,0)

    wait(3)

    # medium flame
    flame2:=create NPC(2,hero X(rathmara),hero Y(rathmara)+1,1)
    walk NPC (flame2,south,2)
    set NPC direction(flame2,1)

    wait(3)

    # smallish flame
    flame3:=create NPC(2,hero X(rathmara),hero Y(rathmara)+1,2)
    walk NPC (flame3,south,1)
    set NPC direction(flame3,2)

    wait(3)

    # itty-bitty flame
    flame4:=create NPC(2,hero X(rathmara),hero Y(rathmara)+1,3)

    # must manually animate the last flame, as it walketh not
    for(loop,0,2) do(
      set NPC frame(flame4,(loop,mod,2))
      wait(1)
    )

    # make flames faster
    set NPC speed(2,10)

    walk NPC (flame2,south,1)
    set NPC direction(flame2,1)

    walk NPC (flame3,south,2)
    set NPC direction(flame3,2)

    walk NPC (flame4,south,3)
    set NPC direction(flame4,3)

    # manually animate all four flames, cause its easyer that way
    for(loop,0,11) do(
      set NPC frame(flame1,(loop,mod,2))
      set NPC frame(flame2,(loop,mod,2))
      set NPC frame(flame3,(loop,mod,2))
      set NPC frame(flame4,(loop,mod,2))
      wait(1)
    )

    # burn the log

    write map block(72,40,82) # burned spot left
    write map block(73,40,83) # burned spot right

    write map block(71,40,160) # burning half left
    write map block(74,40,161) # burning half right

    # make each flame fly away in a different direction

    walk NPC to X(flame1,NPC X(flame1)--2)
    walk NPC to Y(flame1,NPC Y(flame1)--2)

    walk NPC to X(flame2,NPC X(flame2)+2)
    walk NPC to Y(flame2,NPC Y(flame2)--2)

    walk NPC to X(flame3,NPC X(flame3)--2)
    walk NPC to Y(flame3,NPC Y(flame3)+2)

    walk NPC to X(flame4,NPC X(flame4)+2)
    walk NPC to Y(flame4,NPC Y(flame4)+2)

    # make all three flames medium
    set NPC direction(flame1,1)
    set NPC direction(flame2,1)
    set NPC direction(flame3,1)
    set NPC direction(flame4,1)

    wait(1)

    # make all three flames smallish
    set NPC direction(flame1,2)
    set NPC direction(flame2,2)
    set NPC direction(flame3,2)
    set NPC direction(flame4,2)

    wait(1)

    # make all three flames ittybitty
    set NPC direction(flame1,3)
    set NPC direction(flame2,3)
    set NPC direction(flame3,3)
    set NPC direction(flame4,3)

    wait for NPC (flame1)

    destroy NPC(flame1)
    destroy NPC(flame2)
    destroy NPC(flame3)
    destroy NPC(flame4)

    focus camera(hero X(me),hero Y(me),5)

    set hero direction(Skeppio,West)

    wait for camera
    camera follows hero(me)
    
  )

  else(
    show text box(326)
  )

  resume player
  resume caterpillar
  resume NPCs
  resume NPC walls
  resume random enemys
  resume obstruction

end

#---------------------------------------------------------------------------

plotscript, Gallopeg Autorun, begin

  # also run as an afterbattle script

  if(check tag(tag:Rathmara in party))
  then(
    Alter NPC (1,NPC Stat:Activation,NPC Activation:Touch)
  )

  if(check tag(tag:Burned Gallopeg Log))
  then(
    write map block(72,40,82) # burned spot left
    write map block(73,40,83) # burned spot right
    write map block(71,40,98) # burned half left
    write map block(74,40,99) # burned half right
  )

end

#---------------------------------------------------------------------------

plotscript, Jormungand Encounter, begin
  variable (Bob,Skeppio,Rathmara)
  Bob:=rank in caterpillar (hero:Bob the Hamster)
  Skeppio:=rank in caterpillar (hero:Skeppio)
  Rathmara:=rank in caterpillar (hero:Rathmara)

  suspend player
  suspend NPCs
  suspend caterpillar
  suspend hero walls
  suspend npc walls
  suspend random enemys
 
  # pan down
  focus camera (23,11)
  walk hero to X(Bob,23)
  wait for hero (Bob)
  walk hero to Y (Bob,10)

  set hero speed (Skeppio,2)
  set hero speed (Rathmara,2)
  walk hero to X(Skeppio,23)
  walk hero to Y(Skeppio,7)
  walk hero to X(Rathmara,24)
  walk hero to Y(Rathmara,7)

  Wait for hero (Skeppio)
  set hero direction (Skeppio,south)
  wait for hero (Rathmara)
  set hero direction (Rathmara,south)

  play song(song: Ruin Exploration)

  wait for hero (Bob)
  wait (1)

  set hero direction (Bob,west)
  wait (1)

  set hero direction (Bob,north)
  wait (5)

  show text box (329) # Bob: Um.. What are you guys waiting for?
  wait for text box

  # Full-screen image?

  set hero speed (Skeppio,4)
  set hero speed (Rathmara,4)
  walk hero (Rathmara, south, 1)
  walk hero (Rathmara, east, 1)
  wait for hero (Rathmara)
  set hero direction (Rathmara,south)

  show text box (331) # Rathmara: Sorry we have to do this to you Bob.
  wait for text box

  set hero speed (Skeppio,10)
  set hero speed (Rathmara,10)

  walk hero to Y (Skeppio,10)
  walk hero to Y (Rathmara,10)
  walk hero to X (Rathmara,23)
  wait for hero (Skeppio)
  wait for hero (Rathmara)
  
  show text box (330) # Bob: Ouch! Hey! What are you doing!?
  suspend box advance

  set hero speed (Bob,10)
  walk hero (Bob,south,1)
  set hero direction (Bob,north)
  walk hero (Skeppio,south,1)
  walk hero (Rathmara,south,1)

  wait for hero (Bob)

  # Change Bob's picture
  # must use "find hero: here instead of the value from "rank in caterpillar"
  set hero picture(find hero(hero:Bob the Hamster),48)
  set hero direction (Bob,north)
  set hero frame (Bob,0)

  set hero speed (Bob,4)
  set hero speed (Skeppio,4)
  set hero speed (Rathmara,4)

  # Full screen of Bob being tied-up

  resume box advance
  wait for text box

  walk hero (Skeppio,north,1)
  set hero direction (Skeppio,south)

  walk hero (Rathmara,east,1)
  set hero direction (Rathmara,west)

  show text box (332) # Skeppio: Try not to take this personally, it is just business.  
  wait for text box

  wait(15)

  show text box (333) # Bob: What are you going to do to me?
  wait for text box

  # remove rope from inventory
  delete item(item:rope)

  wait(3)

  walk hero (Skeppio, east, 2)  
  wait (1)
  walk hero (Rathmara, east, 1)  
  wait for hero (Rathmara)
  set hero direction (Rathmara,south)
  wait (1)
  set hero direction (Rathmara,west)
  wait for hero (Skeppio)
  set hero direction (Skeppio,south)
  wait (1)
  set hero direction (Skeppio,west)

  show text box (334) # Rathmara: Lets just say...  
                      # Skeppio: You are bait.
                      # Bob: Bait!? You monsters! Bait for WHAT!?
  wait for text box

  wait (5)
  
  show text box (337) # Rathmara: Better for you not to know.
                      # Skeppio: Heh, heh, heh...
  wait for text box

  variable (Jorm, segment)
  
  Jorm := load medium enemy sprite(20)
  set parent(Jorm, lookup slice(sl:map layer 1))
  set slice x(Jorm, 14 * 20)
  set slice y(Jorm, 11 * 20)

  for(i, 1, 4) do(
    segment := load medium enemy sprite(23)
    set parent(segment, Jorm)
    set slice x(segment, i * -50)
  )

  variable(i)
  for(i, 0, 9) do(
    set slice x(Jorm, slice x(Jorm) + 2)
    wait(1)
  )

  show text box (339) # Bob: AAAAAAAAAA!
  for(i, 0, 39) do(
    set slice x(Jorm, slice x(Jorm) + 2)
    wait(1)
  )
  advance text box

  for(i, 0, 9) do(
    set slice x(Jorm, slice x(Jorm) + 2)
    wait(1)
  )

  swap out hero (hero:Bob the Hamster)
  swap by position (find hero(hero:Skeppio),0) # force Skeppio into first slot
  swap by position (find hero(hero:Rathmara),1) # force Rathmara into second slot

  # because party-order just changed, re-get the variables
  Skeppio:=rank in caterpillar (hero:Skeppio)
  Rathmara:=rank in caterpillar (hero:Rathmara)

  set hero speed (Skeppio,4)
  set hero speed (Rathmara,4)

  fade screen out # we fade out and set positions before the battle
                  # to avoid that little "jump" in their positions
                  # after the battle

  set hero position (Skeppio,26,10)
  set hero position (Rathmara,26,11)
  set hero direction (Skeppio,west)
  set hero direction (Rathmara,west)

  set death script (@null death script) # cannot die in this battle!

  # fight the boss!
  variable(won)
  won := fight formation (92)

  set death script (@die in battle) # normal death script

  if(won) then(
    beat unbeatable Jormungandling (skeppio, rathmara, Jorm)
  )else(
    # lost to Jormungandling (normal)
    show text box (340) # Skeppio: Its no good [...]
                        # Rathmara: What a waste [...]
    wait for text box
  )

  # Jorm darts forward
  for(i, 0, 1) do(
    set slice x(Jorm, slice x(Jorm) + 5)
    wait(1)
  )

  walk hero (Skeppio,east,1)
  set hero direction (Skeppio, west)
  walk hero (Rathmara,east,1)
  set hero direction (Rathmara, west)
  
  # Jorm darts forward a little more
  for(i, 0, 1) do(
    set slice x(Jorm, slice x(Jorm) + 5)
    wait(1)
  )
  
  wait for hero(Rathmara)

  show text box (342) # Rathmara: Run!
  wait for text box

  resume caterpillar
  set hero speed (Skeppio,10)  
  walk hero (Skeppio,north,2)
  wait for hero (Skeppio)
  walk hero (Skeppio,west,3)
  wait for hero (Skeppio)
  walk hero (Skeppio,north,1)
  wait for hero (Skeppio)
  walk hero (Skeppio,west,1)
  wait for hero (Skeppio)
  walk hero (Skeppio,north,2)
  wait for hero (Skeppio)

  fade screen out

  free slice(Jorm)

  camera follows hero (me)

  # put Bob back in the party, remove the cats
  swap by position(
     find hero(hero:Bob the Hamster)
     find hero(hero:Skeppio)
  )
  swap out hero (hero:Rathmara)

  # restore Bob's picture
  set hero picture(find hero(hero:Bob the Hamster),0)

  # Set Bob's HP to 25%
  Bob := find hero(hero:Bob the Hamster)
  set hero stat (Bob, stat:HP, get hero stat(Bob, stat:HP, maximum stat) / 4)

  set hero speed (me,4)

  teleport to map (map:Jormungandling's Belly,115,18)

  resume caterpillar

  fade screen in

  wait (5)

  walk hero (me,east,1)
  wait for hero (me)

  walk hero (me,west,2)
  wait for hero (me)

  show text box (175) # where am I?
  wait (2)
  set hero direction (me,south)
  wait (2)
  set hero direction (me,east)

  wait for text box  

  resume hero walls
  resume npc walls
  resume player
  resume NPCs
  resume random enemys

end

#---------------------------------------------------------------------------

script, beat unbeatable jormungandling, skeppio, rathmara, jorm, begin
  variable(i)
  set tag(tag:Cats beat Jormungand, ON)
  set slice x(Jorm, slice x(Jorm) -- 160)
  variable(prize1, prize2)
  prize1 := create NPC(4, 24, 10)
  prize2 := create NPC(4, 24, 12)
  set NPC direction(prize1, up)
  set NPC direction(prize2, right)
  set NPC speed(4, 5)
  wait(16)
  set hero direction(Skeppio, south)
  set hero direction(Rathmara, north)
  show text box (452) # can't believe we did it
  wait for text box
  wait(8)
  set hero direction(Rathmara, west)
  wait(14)
  show text box(456) # see prize
  wait for text box
  set hero direction(Skeppio, west)
  walk hero (rathmara, west, 1)
  wait for hero(rathmara)
  show text box(457) # take prize
  
  # move prizes
  suspend obstruction
  walk NPC (prize1, south, 1)
  walk NPC (prize1, east, 1)
  set NPC direction(prize1, up)
  walk NPC (prize2, north, 1)
  walk NPC (prize2, east, 1)
  set NPC direction(prize2, right)
  
  # clear prizes after they are taken
  wait for NPC(prize1)
  destroy NPC(prize1)
  wait for NPC(prize2)
  destroy NPC(prize2)
  resume obstruction
  
  wait for text box
  wait(5)
  
  # Jorm returns
  quake camera(30)
  focus camera (23,11)
  
  show text box(458)
  set hero direction(skeppio, south)
  walk hero(rathmara, east, 1)
  set hero direction(rathmara, north)
  wait for text box
  
  walk hero(skeppio, west, 1)
  walk hero(rathmara, west, 1)
  
  for(i, 0, 9) do(
    set slice x(Jorm, slice x(Jorm) + 8)
    wait(1)
  )
  
  walk hero(skeppio, east, 1)
  walk hero(rathmara, east, 1)
  set hero direction(skeppio, west)
  set hero direction(rathmara, west)

  for(i, 0, 9) do(
    set slice x(Jorm, slice x(Jorm) + 8)
    wait(1)
  )
end

#---------------------------------------------------------------------------

plotscript, Rathmara Finds Rope, begin
  suspend player
  suspend NPCs
  suspend random enemys
  suspend caterpillar

  variable(Bob,Rathmara,Skeppio)

  Bob:=rank in caterpillar(hero:Bob the Hamster)
  Rathmara:=rank in caterpillar(hero:Rathmara)
  Skeppio:=rank in caterpillar(hero:Skeppio)

  show text box (346)

  walk hero to X (Rathmara, 45)
  wait for hero (Rathmara)

  set hero direction(Bob, east)
  set hero direction(Skeppio, east)

  walk hero to Y (Rathmara, 14)
  wait for hero (Rathmara)

  set hero direction(Bob, north)
  set hero direction(Skeppio, north)

  focus camera(hero X(Rathmara), hero Y(Rathmara),4)

  wait for text box
  wait for camera

  camera follows hero (Rathmara)

  walk hero (Rathmara, north, 2)
  wait for hero (Rathmara)

  walk hero (Rathmara, east, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, north, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, east, 3)
  wait for hero (Rathmara)

  walk hero (Rathmara, north, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, east, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, north, 3)
  wait for hero (Rathmara)

  walk hero (Rathmara, east, 5)
  wait for hero (Rathmara)

  walk hero (Rathmara, north, 3)
  wait for hero (Rathmara)

  walk hero (Rathmara, east, 2)
  wait for hero (Rathmara)

  set hero direction (Rathmara, north)
  wait(5)

  use npc(NPC at spot(57,3))

  wait for text box

  wait(5)

  walk hero (Rathmara, west, 4)
  wait for hero (Rathmara)

  walk hero (Rathmara, south, 3)
  wait for hero (Rathmara)

  walk hero (Rathmara, west, 3)
  wait for hero (Rathmara)

  walk hero (Rathmara, south, 3)
  wait for hero (Rathmara)

  walk hero (Rathmara, west, 2)
  wait for hero (Rathmara)

  walk hero (Rathmara, south, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, west, 2)
  wait for hero (Rathmara)

  walk hero (Rathmara, south, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, west, 1)
  wait for hero (Rathmara)

  walk hero (Rathmara, south, 2)
  wait for hero (Rathmara)

  focus camera(hero X(Bob), hero Y(Bob),4)

  show text box (348)

  wait for text box
  wait for camera

  camera follows hero (Bob)

  resume player
  resume NPCs
  resume random enemys
  resume caterpillar
end

#---------------------------------------------------------------------------

plotscript, jormungand each step, x, y, begin
  if (current map <> map:Jormungandling's Belly) then (exit script)
  if (check tag(tag: Bob is leader) == OFF) then (exit script)
  variable (block, bob)
  block := read map block(x,y)
  bob := find hero(hero:Bob the Hamster)
  set hero picture(bob, 0, outside battle)
  if(block == 48 || block == 64) then, begin
    bob := rank in caterpillar(hero:Bob the Hamster)
    set hero picture (bob, 59, outside battle)
  end
end

#---------------------------------------------------------------------------

plotscript, fight snake spleen, begin
  fight formation(95)
  set tag(tag:beat snake spleen1, ON)
  variable(ref)
  ref := NPC reference(14)
  set NPC position(ref, 50, 18)
  wait(10)
  show text box(404)
  wait for text box
  set NPC speed(ref, 5)
  walk NPC(ref, left, 2)
  wait for NPC(ref)
  walk NPC(ref, down, 1)
  wait for NPC(ref)
  walk NPC(ref, left, 1)
  wait for NPC(ref)
  walk NPC(ref, down, 1)
  wait for NPC(ref)
  walk NPC(ref, left, 1)
  wait for NPC(ref)
end

#---------------------------------------------------------------------------

plotscript, golf game start tile, arg, ref, begin
  destroy NPC(ref)
  reset golf game
end

script, reset golf game, begin
 hit golf ball too hard := false
 golf round := 0
 golf hits := 0
 golf total := 0
 set tag(tag:can open a golf door, ON)
end

plotscript, open a golf door, arg, ref, begin
  if(check tag(tag:can open a golf door)) then, begin
    destroy NPC(ref)
    set tag(tag:can open a golf door, OFF)
    golf total += golf hits
    golf hits := 0
    increment(golf round)
    if(golf round <= 9) then(
      show text box(402) # golf round number
    )else(
      show final golf score
    )
  end, else, begin
    show text box(403) # must finish round
  end
end

script, show final golf score, begin
   variable(reward box)
   reward box := 438 # no reward
   golf score hide
   while(1) do(
     if(golf total <= 8) then(
       $str:golf score="cheatastic!"
       break
     )
     if(golf total == 9) then(
       # all holes-in-one
       $str:golf score="PERFECT!"
       reward box := 439 # golf club
       break
     )
     if(golf total <= 14) then(
       # at least 4 holes-in-one
       $str:golf score="fantastic!"
       reward box := 440 # fruit basket
       break
     )
     if(golf total <= 16) then(
       # at least 2 holes-in-one
       $str:golf score="excellent!"
       reward box := 441 # $500
       break
     )
     if(golf total <= 18) then(
       # maybe all birdies
       $str:golf score="great!"
       reward box := 442 # mage jar
       break
     )
     if(golf total <= 22) then(
       $str:golf score="above par"
       reward box := 443 # socks
       break
     )
     if(golf total <= 27) then(
       # average 3 hits per hole
       $str:golf score="par for the course"
       reward box := 444 # $10
       break
     )
     if(golf total <= 30) then(
       $str:golf score="little below par"
       break
     )
     if(golf total <= 33) then(
       $str:golf score="not too good"
       break
     )
     if(golf total <= 36) then(
       # average 4 hits per hole
       $str:golf score="needs work"
       break
     )
     if(golf total <= 45) then(
       # average 5 hits per hole
       $str:golf score="poor"
       break
     )
     if(golf total >= 63) then(
       # average 7 hits per hole
       $str:golf score="astonishingly bad"
       reward box := 445 # chai tea
       break
     )
     if(golf total <= 117) then(
       # average 13 hits per hole
       $str:golf score="INSANELY bad"
       reward box := 446 # fight snake spleen again
       break
     )
     # between 46 and 62
     $str:golf score="terrible"
     break
   )
   show text box(437)
   wait for text box
   show text box(reward box)
end

#---------------------------------------------------------------------------

plotscript, whack the golf ball, arg=0, ref=0, begin
  variable(x, y, d, club, charge, force, moved)
  suspend player
  x := NPC X(ref)
  y := NPC Y(ref)
  d := rotate(hero direction(me), counterclockwise)
  charge := 0
  force := 0
  moved := false
  hit golf ball too hard := false
  
  # Animate Bob
  if (check tag(tag: Bob is leader) == ON) then, begin
    $str:golf swing="Swing *"
    show string at (str:golf swing, 0, 190)
    club := create NPC(9)
    set hero picture(me, 0)
    set NPC position(club, hero X(me), hero Y(me))
    set NPC direction(club, hero direction(me))
    set NPC frame(club, 0)
    advance NPC by pixels(club, 15)
    while(holding action key) do, begin
      charge += 1
      if ((charge, mod, 3) == 0) then, begin
       if(force << 32) then, begin
        force += 1
        append ascii(str:golf swing, 42)
       end
      end
      wait(1)
    end
    hide string(str:golf swing) # Hide display of force
    advance NPC by pixels(club, -15)
    spin golf club(club)
    destroy NPC(club)
    jormungand each step (hero X(me), hero Y(me))
  end
  
  moved := move golf ball(ref, d, force)
  focus camera(hero X(0), hero Y(0), 10)
  wait for camera
  camera follows hero(0)

  if(force>>0 && not(moved)) then, begin
    # No movement!
    fix stuck golf ball(ref)
  end

  if(hit golf ball too hard) then, begin
    show text box(399)
    wait for text box
  end

  resume player
end

script, golf score hide, begin
  hide string(str:golf score) # Hide display of hits
  stop timer(golf score timer)
end

script, move golf ball, ref, d, force, begin
  variable(x,y)
  variable(moved)
  variable(first bounce)
  moved := false
  first bounce := true
  if(force >> 0) then, begin
    play sound(sfx:lilhit)
    increment(golf hits)
    $str:golf score="Hits: "
    append number(str:golf score, golf hits)
    show string at(str:golf score, 0, 0)
  end
  while(force >> 0) do, begin
    x := NPC x(ref)
    y := NPC y(ref)
    set NPC speed(ref, 10)
    if(force << 2) then(set NPC speed(ref, 5))
    
    d := check golf ball bounces(ref, d, force)
    if(d==-1) then(exit returning(true))
    if(hit golf ball too hard && force>>2) then(force:=2)
    walk NPC(ref, d, 1)
    wait for golf ball(ref)
    
    #Bounce agains normal obstruction walls
    if(NPC x(ref)==x && NPC y(ref)==y) then, begin
      d := rotate(d, clockwise, 2)
      if(first bounce) then(first bounce:=false, increment(force))
      play sound(sfx:lilhit)
    end, else, begin
      moved := true
    end

    decrement(force)
  end
  # Score should vanish after 6 seconds
  set timer(golf score timer, 6, 16, @golf score hide)
  # re-run collision check, in case the ball landed on the hole
  if(check golf ball bounces(ref, d, force) == -1)
    then(exit returning(true))
  exit returning(moved)
end

script, wait for golf ball, ref, begin
  while(NPC is walking(ref)) do(
    update golf camera(ref)
    wait(1)
  )
end

script, update golf camera, ref, begin
  variable(ax, ay, bx, by, cx, cy, w, h)
  ax := hero pixel x(0)
  ay := hero pixel y(0)
  bx := NPC pixel x(ref)
  by := NPC pixel y(ref)
  w := slice width(sprite layer) / 2 -- 10
  h := slice height(sprite layer) / 2 -- 10
  cx := (ax + bx) / 2
  cy := (ay + by) / 2
  while(bx <= cx -- w) do(cx -= 1)
  while(bx >= cx + w) do(cx += 1)
  while(by <= cy -- h) do(cy -= 1)
  while(by >= cy + h) do(cy += 1)
  put camera(cx -- w, cy -- h)
end

script, check golf ball bounces, ref, d, force, begin
  variable(x, y, bounce)
  variable(tile, ahead, floor)
  x := NPC x(ref)
  y := NPC y(ref)
  bounce := -1
  tile := read map block(x, y, 1) # golf course edges are always in layer 1
  floor := read map block(x, y, 0) # the hole is always in layer 0
  if(d==up) then(y-=1)
  if(d==down) then(y+=1)
  if(d==left) then(x-=1)
  if(d==right) then(x+=1)
  ahead := read map block(x, y, 1) # golf course edges are always in layer 1
  if(floor==64 && force<<3) then, begin
    force := 0
    set tag(tag:can open a golf door, ON)
    destroy NPC(ref)
    golf score hide
    show text box(406) # Hole in X
    wait(1)
    if (golf hits == 1) then(change box face(8))
    if (golf hits >> 5) then(change box face(4))
    wait for text box
    exit returning(-1) # signal abort
  end
  if(tile==49) then(bounce:=down)
  if(tile==50) then(bounce:=right)
  if(tile==51) then(bounce:=left)
  if(tile==52) then(bounce:=up)
  if(tile==65 && d==up)    then(bounce:=right)
  if(tile==65 && d==left)  then(bounce:=down)
  if(tile==66 && d==up)    then(bounce:=left)
  if(tile==66 && d==right) then(bounce:=down)
  if(tile==67 && d==down)  then(bounce:=right)
  if(tile==67 && d==left)  then(bounce:=up)
  if(tile==68 && d==down)  then(bounce:=left)
  if(tile==68 && d==right) then(bounce:=up)
  if(ahead==97 && d==up)    then(bounce:=down)
  if(ahead==98 && d==right) then(bounce:=left)
  if(ahead==99 && d==down)  then(bounce:=up)
  if(ahead==100 && d==left) then(bounce:=right)
  if(bounce>=0) then, begin
    # a bounce occured
    if(force<<30) then, begin
      exit returning(bounce)
    end, else, begin
      hit golf ball too hard := true
    end
  end
  exit returning(d)
end

script, fix stuck golf ball, ref, begin
  wait(8)
  show text box (397) # Oops! stuck
  wait for text box
  wait(1)
  set hero direction(me, rotate(hero direction(me), counterclockwise))
  wait(5)
  set hero direction(me, rotate(hero direction(me), clockwise))
  wait(3)
  set hero direction(me, rotate(hero direction(me), clockwise))
  wait(5)
  set hero direction(me, rotate(hero direction(me), counterclockwise))
  wait(2)
  suspend obstruction
  set hero speed(me, 5)
  set NPC speed(ref, 5)
  walk hero(me, hero direction(me), 1)
  wait for hero(me)
  walk hero(me, rotate(hero direction(me), clockwise, 2), 1)
  walk NPC(ref, hero direction(me), 1)
  set hero direction(me, rotate(hero direction(me), clockwise, 2))
  wait for hero(me)
  set hero speed(me, 4)
  resume obstruction
  wait(15)
  show text box (398) # Hope that wasn't cheating
  increment(golf hits)
  $str:golf score="Hits: "
  append number(str:golf score, golf hits)
  wait for text box
end

script, spin golf club, club=0, begin
  variable(i)
  playsound(3)
  for(i, 0, 4) do, begin
    set NPC direction(club, rotate(NPC direction(club), counterclockwise))
    advance NPC by pixels(club, 15)
    set NPC frame(club, 0)
    wait(1)
    advance NPC by pixels(club, -5)
    advance NPC by pixels(club, 15, -1)
    set NPC frame(club, 1)
    wait(1)
    advance NPC by pixels(club, -15, -1)
    advance NPC by pixels(club, -10)
  end
end

#---------------------------------------------------------------------------

script, holding action key, begin
  return (keyispressed(key:ENTER)
       || keyispressed(key:SPACE)
       || keyispressed(key:CTRL)
       || keyispressed(joy:button 1))
end

#---------------------------------------------------------------------------

script, advance NPC by pixels, ref=0, pix=1, angle=0, begin
  variable(d, x, y)
  d := NPC direction(ref)
  if(angle) then(d := rotate(d, clockwise, angle))
  x := NPC pixel X(ref)
  y := NPC pixel Y(ref)
  switch(d) do(
    case(north) do(put npc(ref, x, y -- pix))
    case(south) do(put npc(ref, x, y + pix))
    case(west)  do(put npc(ref, x -- pix, y))
    case(east)  do(put npc(ref, x + pix, y))
  )
end

#---------------------------------------------------------------------------

define constant (1, clockwise)
define constant (-1, counterclockwise)

script, rotate, dir=0, which way=1, quarters=1, begin
  dir += quarters * which way
  while (dir >> 3) do(dir -= 4)
  while (dir << 0) do(dir += 4)
  exit returning(dir)
end

#---------------------------------------------------------------------------

plotscript, lower flanat castle rope ladder, no delay=0, begin
  variable(i, ref, x, y, count)
  set tag(tag: flanat rope ladder, ON)
  count := NPC copy count(17)
  if(count >> 1) then(exit script)
  set tag(tag: flanat rope lock, ON)
  for(i, 17, 18)
    do(alter NPC(i, NPCstat:move type, NPCmovetype:walk in place))
  set NPC speed(17, 4)
  ref := NPC reference(17)
  x := NPC X(ref)
  y := NPC Y(ref)
  for(i, 0, 2) do, begin
    if(no delay) then, begin
      create NPC(17, x, y + 1 + i)
    end, else, begin
      walk NPC(ref, south, 3--i)
      ref := create NPC(17, x, y)
      wait(5)
    end
  end
  for(i, 17, 18)
    do(alter NPC(i, NPCstat:move type, NPCmovetype:stand still))
  if(not(no delay)) then, begin
    wait(5)
  end
  set tag(tag: flanat rope lock, OFF)
end

plotscript, climb flanat castle rope ladder, begin
  if(check tag(tag:flanat rope lock)==ON) then(exit script)
  variable(d)
  suspend player
  suspend random enemies
  suspend hero walls
  suspend obstruction
  d := hero direction(me)
  walk hero(me, d, 1)
  set hero direction(me, north)
  wait for hero(me)
  set hero speed(me, 2)
  walk hero(me, d, 3)
  set hero direction(me, north)
  wait for hero(me)
  set hero speed(me, 4)
  walk hero(me, d, 1)
  wait for hero(me)
  resume player
  resume random enemies
  resume hero walls
  resume obstruction
end

#---------------------------------------------------------------------------

plotscript, fruit basket, begin
  get item(item:grapes, 3)
  get item(item:apple, 5)
  get item(item:rutabaga, 3)
  get item(item:carrot, 10)
  get item(item:life, 1)
end

#---------------------------------------------------------------------------

plotscript, snake backtrack, begin
  suspend player
  suspend NPCs
  suspend random enemies
  
  variable(duck, cell)
  
  duck := NPC reference(18)
  cell := NPC reference(19)
  
  walk NPC(duck, right, 1)
  wait for NPC(duck)
  set NPC direction(duck, left)
  suspend hero walls
  suspend NPC walls
  suspend obstruction
  walk hero(me, north, 2)
  wait for hero(me)
  
  write map block(25, 52, 34, 3)
  walk hero(me, south, 1)
  walk NPC(cell, south, 1)
  wait for hero(me)
  wait for NPC(me)
  fade screen out
  wait(1)
  
  write map block(25, 52, 0, 3)
  walk NPC (duck, left, 1)
  set NPC direction(duck, south)
  
  write map block(92, 19, 10, 3)
  write map block(92, 20, 1, 3)
  set hero position(me, 92, 20)
  set NPC position(cell, 92, 20)
  
  wait(8)
  fade screen in
  
  variable(other cell)

  other cell := NPC at spot(93, 16)
  if(other cell <> 0) then(
    walk NPC(other cell, north, 1)
  )

  other cell := NPC at spot(93, 17)
  if(other cell <> 0) then(
    walk NPC(other cell, south, 1)
  )
  
  walk hero (me, north, 4)
  walk NPC (cell, north, 4)
  wait for hero(me)
  wait for NPC(cell)

  write map block(92, 19, 0, 3)
  write map block(92, 20, 0, 3)

  walk hero (me, right, 2)
  walk NPC (cell, right, 1)

  wait for hero(me)
  set hero direction(me, south)
  wait(2)
  set hero direction(me, west)
  wait(1)  
  
  wait for NPC(cell)
  write map block(93, 17, 160, 3) 
  walk NPC(cell, south, 1)
  wait for NPC(cell)
  set NPC position(cell, 25, 51)
  wait(1)
  write map block(93, 17, 0, 3) 

  reset golf game
  reset map state
  other cell := NPC at spot(94, 18)
  set NPC position(other cell, 94, 23)

  resume hero walls
  resume NPC walls
  resume obstruction
  
  resume player
  resume NPCs
  resume random enemies
  set tag(tag:used snake backtrack, true)
end

plotscript, snake backbacktrack, begin
  suspend player
  suspend NPCs
  suspend random enemies
  
  variable(duck, cell)
  
  duck := NPC reference(27) #technically a pidgeon! ;)
  cell := NPC reference(28)
  
  if(hero X(me) == NPC X(duck)) then(
    walk hero(me, west, 1)
    wait for hero(me)
  )
  
  set NPC speed(duck, 4)
  walk NPC(duck, north, 1)
  wait for NPC(duck)
  set NPC direction(duck, left)
  suspend hero walls
  suspend NPC walls
  suspend obstruction
  walk hero to X(me, 99)
  wait for hero(me)
  walk hero to Y(me, 22)
  wait for hero(me)
  walk hero(me, east, 2)
  wait for hero(me)
  
  # Sink under the snake juice
  write map block(101, 22, 10, 3)
  walk hero(me, south, 1)
  walk NPC(cell, south, 1)
  wait for hero(me)
  wait for NPC(me)
  fade screen out
  wait(1)
  
  write map block(101, 22, 0, 3)
  walk NPC (duck, south, 1)
  set NPC direction(duck, west)
  
  write map block(19, 51, 34, 3)
  set hero position(me, 19, 51)
  set NPC position(cell, 19, 51)
  
  wait(8)
  fade screen in
  
  walk hero (me, north, 1)
  walk NPC (cell, north, 1)
  wait for hero(me)
  wait for NPC(cell)

  write map block(19, 51, 0, 3)

  walk hero (me, south, 1)
  wait for hero(me)
  
  walk hero (me, west, 1)
  set hero direction(me, east)
  wait for hero(me)

  write map block(19, 51, 34, 3) 
  walk NPC(cell, south, 1)
  wait for NPC(cell)
  set NPC position(cell, 101, 22)
  wait(1)
  write map block(19, 51, 0, 3) 

  reset golf game
  reset map state

  resume hero walls
  resume NPC walls
  resume obstruction
  
  resume player
  resume NPCs
  resume random enemies
end

#---------------------------------------------------------------------------

plotscript, quack inn, begin
  suspend player
  suspend obstruction
  
  variable(remember song)
  remember song := current song
  play song(song:Sleeping Music)
  
  walk hero to x(me, 99)
  walk hero to y(me, 9)
  wait for hero(me)

  variable(innkeeper, save x, save y)
  innkeeper := NPC reference(10)
  save x := NPC x(innkeeper)
  save y := NPC y(innkeeper)
  
  tweak palette (-50, -50, -30)
  fade screen in
  reset map state
  
  set NPC position(innkeeper, save x, save y)
  
  key wait seconds (11)
  reset palette
  fade screen in
  if(remember song == 0)
    then(stop song)
    else(play song(remember song))
  wait (5)
  
  resume obstruction
  resume player
  
end

#---------------------------------------------------------------------------

script, quake camera, ticks, distance=4, begin
  variable(i, oldx, oldy)
  oldx := camera pixel x
  oldy := camera pixel y
  for(i, 1, ticks) do(
    put camera(oldx + random(distance * -1, distance), oldy + random(distance * -1, distance))
    wait(1)
  )
end

#---------------------------------------------------------------------------

script, quake camera until text box, distance=4, begin
  wait(1)
  variable(i, oldx, oldy)
  oldx := camera pixel x
  oldy := camera pixel y
  while(current text box >= 0) do(
    put camera(oldx + random(distance * -1, distance), oldy + random(distance * -1, distance))
    wait(1)
  )
end

#---------------------------------------------------------------------------

plotscript, jormungandling belly autorun, begin
  ship in jorm belly
end

#---------------------------------------------------------------------------

script, ship in jorm belly, begin
  variable(sl)
  sl := load large enemy sprite(16)
  set parent(sl, lookup slice(sl:map layer 1))
  set horiz anchor(sl, edge:center)
  set vert anchor(sl, edge:bottom)
  set slice x(sl, 16 * 20)
  set slice y(sl, 23 * 20)
  ship effect := sl
  set timer(jorm viking ship timer, 0, 1, @ship in jorm belly moves left)
  viking ship splash animation
end

script, ship in jorm belly moves, x dest, next script, begin
  variable(sl)
  if(current map <> map:Jormungandling's Belly) then(
    cleanup jorm belly ship
    exit script
  )
  if(ship effect) then(
    sl := ship effect
    move slice to(sl, x dest, slice y(sl), 10)
    set timer(jorm viking ship timer, 0, 10, next script)
  )
end

script, ship in jorm belly moves left, begin
  ship in jorm belly moves(310, @ship in jorm belly moves right)
end

script, ship in jorm belly moves right, begin
  ship in jorm belly moves(320, @ship in jorm belly moves left)
end

script, cleanup jorm belly ship, begin
  if(slice is valid(ship effect)) then(
    free slice(ship effect)
    ship effect := 0
  )
  stop timer(jorm viking ship timer)
  stop timer(splash animation timer)
end

script, viking ship splash animation, begin
  if(ship effect && slice is valid(ship effect)) then(
    variable(splash)
    splash := lookup slice(sli:splash effect, ship effect)
    if(not(splash)) then(
      splash := load large enemy sprite(26)
      set parent(splash, ship effect)
      set slice lookup(splash, sli:splash effect)
      set slice y(splash, 5)
    )
    loop frame set(splash, 26, 27)
    set timer(splash animation timer, 0, 3, @viking ship splash animation)
  )
end

#---------------------------------------------------------------------------

plotscript, admire viking wreck, begin
  suspend player
  pan camera(west, 5, 4)
  wait(8)
  show text box(459)
  wait for text box
  wait for camera
  pan camera(east, 5, 5)
  wait for camera
  camera follows hero
  resume player
end

#---------------------------------------------------------------------------

plotscript, viking behind uvula, begin
  variable(ref)
  variable(saved song)
  saved song := current song
  suspend player
  suspend random enemies
  
  show text box(461) # what is that?
  wait for text box

  ref := NPC reference(20) # Gisli

  set hero speed(me, 5)
  set NPC speed(ref, 5)
  
  suspend box advance

  play song(song: evil plip's dirge)
  show text box(462) # GRRAAA!
  walk NPC(ref, south, 1)
  walk hero(me, south, 2)
  set hero direction(me, north)
  wait for hero(me)
  
  wait(18)
  advance text box

  walk npc and hero(ref, south, me, south, 1)
  walk npc and hero(ref, south, me, west, 1)
  walk npc and hero(ref, south, me, south, 1)
  walk npc and hero(ref, south, me, west, 1)
  walk npc and hero(ref, south, me, south, 1)
  
  show text box(463) # Oh gosh Oh Gosh!
  
  walk npc and hero(ref, west, me, south, 1)
  walk npc and hero(ref, south, me, south, 1)
  walk npc and hero(ref, west, me, south, 1)
  walk npc and hero(ref, south, me, south, 3)

  walk npc and hero(ref, south, me, east, 1)
  walk npc and hero(ref, south, me, south, 1)

  advance text box

  walk npc and hero(ref, south, me, east, 2)

  walk npc and hero(ref, east, me, east, 1)
  walk npc and hero(ref, south, me, east, 1)
  walk npc and hero(ref, east, me, east, 1)

  walk npc and hero(ref, east, me, south, 2)

  show text box(462) # Graaa!
  
  walk npc and hero(ref, east, me, east, 2)
  walk npc and hero(ref, south, me, east, 1)
  walk npc and hero(ref, east, me, east, 1)

  advance text box
  
  walk npc and hero(ref, south, me, south, 1)
  walk npc and hero(ref, east, me, east, 3)
  walk npc and hero(ref, south, me, south, 1)
  walk npc and hero(ref, east, me, east, 3)

  # Bob stops to glance back
  walk NPC(ref, south, 1)
  wait(1)
  set hero direction(me, south)
  wait(1)
  set hero direction(me, west)
  wait for NPC(ref)

  show text box(464) # Help Help Help!
  
  walk npc and hero(ref, east, me, east, 1)
  walk npc and hero(ref, east, me, north, 1)
  walk npc and hero(ref, east, me, east, 1)
  walk npc and hero(ref, east, me, north, 1)
  walk npc and hero(ref, north, me, north, 1)
  walk npc and hero(ref, east, me, east, 2)
  walk npc and hero(ref, north, me, east, 1)
  
  advance text box

  walk npc and hero(ref, north, me, north, 1)

  show text box(462) # Graa!
  
  walk npc and hero(ref, east, me, east, 2)
  walk npc and hero(ref, north, me, east, 1)
  walk npc and hero(ref, east, me, east, 2)
  
  advance text box

  walk npc and hero(ref, east, me, east, 3)
  
  # Bob trips
  set hero picture(leader, 48)
  set hero speed(me, 4)
  walk hero(me, east, 1)
  walk NPC (ref, east, 3)
  wait for hero(me)
  set hero direction(me, north)
  set hero frame(me, 1)
  set hero picture(leader, 48) # Why do I have to do this twice?
  wait(2)
  set hero direction(me, east)
  wait for NPC(ref)
  
  # Hesitate before battle
  wait(10)
  
  resume box advance
  
  fight formation(102)
  wait(1)
  set hero picture(leader, 0)
  
  set hero speed(me, 4)
  set NPC speed(ref, 4)

  alter NPC(ref, NPCstat:picture, 5)
  set hero direction(me, west)
  
  walk NPC(ref, west, 1)
  set NPC direction(ref, east)
  
  # Gislit takes one step back 
  walk NPC(ref, west, 2)
  wait for NPC(ref)
  
  # after battle conversation
  show text box(465) # introduce Gisli
  wait for text box

  play song (song:Gisli Theme)
  show text box(472) # Gisli starts his Tale
  wait for text box
  
  walk NPC (ref, west, 8)
  wait(5)
  show text box(474) # Curious...
  walk hero(me, west, 10)
  wait for hero(me)
  wait for text box
  
  show text box(475)
  wait for text box
  set NPC direction(ref, east)
  show text box(477)
  wait for text box

  set NPC direction(ref, west)
  show text box(485)
  wait for text box
 
  play song(saved song)
  wait(18 * 6)
  
  show text box(496) # Is that the end?
  wait for text  box
  wait(18)
  
  walk NPC (ref, east, 1)
  wait for NPC(ref)
  
  show text box(497) # The rest of the story has not yet unfolded
  wait for text box
  
  wait(18)

  show text box(498) # Going now...
  wait for text box

  swap by position(0, find hero(hero:Bob the Hamster)) # force Bob into slot 0
  add hero(hero:Gisli)
  set hero position(rank in caterpillar(hero:Gisli), NPC X(ref), NPC Y(ref))
  set hero direction(rank in caterpillar(hero:Gisli), NPC direction(ref))
  set tag(tag:Gisli joined, ON) # makes the NPC vanish

  variable(i)
  for(i, 0, 3) do(
    walk hero(me, south, 1)
    wait for hero(me)
    walk hero(me, west, 1)
    wait for hero(me)
  )
  walk hero(me, west, 3)
  wait for hero(me)

  wait(14)
  set hero direction(me, right)
  show text box(499)
  wait for text box
  
  resume player
  resume random enemies
end

#---------------------------------------------------------------------------

script, walk npc and hero, npc, npc dir, hero, hero dir, steps, begin
  # This script assumes that the hero and the NPC have the same walking speed
  walk NPC(npc, npc dir, steps)
  walk hero(hero, hero dir, steps)
  wait for NPC(npc)
  wait for hero(hero)
end

#---------------------------------------------------------------------------

plotscript, uvula battle, begin
  suspend player
  
  variable(ref)
  ref := NPC reference(21)

  play song(song: evil plip's dirge)  
  show text box(519)
  wait for text box

  pan camera(north, 1, 1)

  variable(i, delay)
  for(delay, 3, 1, -1) do(
    for(i, 0, 3 * delay) do(
      set NPC direction(ref, east)
      wait(delay)
      set NPC direction(ref, west)
      wait(delay)
    )
  )
  
  fight formation(103)
  play song(song: evil plip's dirge)  

  set NPC direction(ref, south)
  quake camera(34, 1)

  set tag(tag:Beat Uvula, ON)
  
  quake camera(16)
  show text box(522)
  quake camera until text box
    
  jorm vomits the ship
  
  resume player
end

#---------------------------------------------------------------------------

script, jorm vomits the ship, begin
  fade screen out(63, 0, 0)
  wait(1)
  fade screen out(50, 50, 63)
  wait(1)
  teleport to map(map:Where Jorm vomits the ship, 0, 0)

  play song (song: Gisli Theme)

  put camera(20 * 84, 0)
  pan camera(west, 80)

  wait(1)

  fade screen in
  
  wait(18 * 6)
  
  variable(sl, jorm, ship)
  
  sl := create container(80, 80)
  set slice x(sl, 320)
  set slice y(sl, 60)
  
  ship := load large enemy sprite(16)
  horiz flip sprite(ship)
  set parent(ship, sl)
  set slice x(ship, 80)
  
  jorm := load large enemy sprite(3)
  horiz flip sprite(jorm)
  set parent(jorm, sl)
  
  variable(i)
  
  for(i, 1, 20) do(
    set slice x(sl, slice x(sl) -- 4)
    wait(1)
  )
  
  set slice x(ship, 0)
  
  for(i, 1, 20) do(
    set slice x(sl, slice x(sl) -- 4)
    set slice x(jorm, slice x(jorm) + 8)
    wait(1)
  )

  wait(18 * 5)

  fade screen out(45, 45, 63)
  wait(1)
  free slice(sl)
  suspend map music
  teleport to map(map: World Map, 0, 0)
  resume map music
  
  variable(ref)
  ref := create NPC(6, 35, 36, up)

  camera follows NPC(ref)

  wait(1)
  fade screen in
  walk NPC(ref, west, 20)

  set NPC direction(ref, up)
  wait(50)
  set NPC direction(ref, right)
  wait(50)
  set NPC direction(ref, down)
  wait(50)
  set NPC direction(ref, left)
  wait(50)
  pan camera(west, 5, 2)
  destroy NPC(ref)
  wait for camera

  fade screen out
  wait(1)
  teleport to map(map:Kelp Reef, 30, 6)
  camera follows hero(me)
  wait(1)
  fade screen in
  walk hero(me, south, 1)
  wait for hero(me)
  
  show text box(381)
  wait for text box
  
end

#---------------------------------------------------------------------------

script, change box face, portrait id, begin
  variable(sl)
  sl := lookup slice(sl:textbox portrait)
  replace portrait sprite(sl, portrait id)
end

#---------------------------------------------------------------------------

plotscript, wrapped equip menu, begin
  if(room in active party == 3) then(
    # only one hero
    equip menu
    update hero sprites
    exit script
  )
  
  # more than one hero, pick one
  variable(who)
  who := pick hero
  if(who >= 0) then(
    equip menu(who)
    update hero sprites
  )
end

#---------------------------------------------------------------------------

plotscript, update hero sprites, begin
  variable(hero)
  hero := find hero(hero:Bob the Hamster)
  if(hero >= 0) then(
    if(check tag(tag:Holding breath)) then(
      set hero picture(hero, 70, outside battle)
      set hero picture(hero, 11, inside battle)
    )else(
      reset hero pics(hero)
    )
  )
  hero := find hero(hero:Gisli)
  if(hero >= 0) then(
    if(check tag(tag:Holding breath)) then(
      set hero picture(hero, 71, outside battle)
      set hero picture(hero, 12, inside battle)
    )else(
      reset hero pics(hero)
    )
  )
  hero := find hero(hero:Misa DuHamstre)
  if(hero >= 0) then(
    if(check tag(tag:Misa is wearing Ribn)) then(
      reset hero pics(hero)
    )else(
      set hero picture(hero, 57, outside battle)
      set hero picture(hero, 9, inside battle)
    )
  )
  
end

script, reset hero pics, who, begin
  reset hero picture(who, outside battle)
  reset hero picture(who, inside battle)
end

#---------------------------------------------------------------------------

plotscript, on load, begin
  variable(i)
  for(i, 0, 3) do(
    if(hero by slot(i) >= 0) then(
      update level up learning(i, false)
    )
  )
  if(not(check tag(tag:init battle wait))) then(
    set tag(tag:init battle wait, true)
    set tag(tag:battle wait, true)
  )
  update battle pause on menus
  
  if(current map == map:jormungandling's belly) then(
    jorm belly on load
  )
  
  if(current map == map:Kelp Reef || current map == map:Mersheep Village Interior) then(
    kelp reef on load
  )

  # Rename James to Misa in old save slots
  variable(misa)
  misa := find hero(hero:misa duhamstre)
  if(misa >= 0) then(
    get hero name(0, misa)
    if(string compare(0, $1="James")) then(
      set hero name($0="Misa Duhamstre", misa)
    )
  )
  
  # A quick fix for save-games that have never run the script that
  # triggers the owl to appear on Troll Mountain
  if(check tag(tag:saw broaste ghost)) then(
    set tag(tag:saw broaste castle, ON)
  )
end

script, jorm belly onload, begin
  variable(i)
  if(read zone(2, hero X(0), hero Y(0))) then(
    # Currently standing on the golf course
    for(i, 0, 3) do(
      if(hero by rank(i) >= 0) then(
        set hero position(i, 47, 22 -- i)
        set hero direction(i, south)
      )
    )
    reset golf game
  )
end

#---------------------------------------------------------------------------

plotscript, spell tester, begin
  variable(menu, mi, i, h, j)
  if(keyval(key:ctrl) >> 0 && keyval(key:T) >> 1) then(
    menu := create menu
    set menu text align(menu, align:left)
    for(i, 1, read general(34) + 1) do(
      mi := add menu item(menu)
      read attack name(0, i)
      for(h, 0, 3) do(
        if(knows spell(h, i)) then(
          $str:temp + " "
          get hero name(1, h)
          str:temp $+ 1
        )
        for(j, 0, spells learned(h, get count) -- 1) do(
          if(i == spells learned(h, j)) then(
            $str:temp + "(+)"
          )
        )
      )
      set menu item caption(mi, 0)
    )
    wait for menu(menu)
  )
end

#---------------------------------------------------------------------------

plotscript, pick and eat a carrot, arg, ref, begin
  show text box(197)
  wait for text box
  if(use item(item:carrot)) then(
    destroy NPC(ref)
  )
end

#---------------------------------------------------------------------------

script, kelp reef on load, begin
  variable(x, y)
  x := hero x(me)
  y := hero y(me)
  if(not(read zone(1, x, y))) then(
    # water
    start air timer(large(5, breath memory))
    set tag(tag: need air timer, OFF)
    set tag(tag:holding breath, ON)
    set tag(tag:need air, ON)
    update hero sprites
  )
end

plotscript, kelp reef each step, begin
  if(check tag(tag:using sheep inn)) then(
    exit script
  )
  variable(x, y)
  x := hero x(me)
  y := hero y(me)
  if(read zone(1, x, y)) then(
    # bubble
    inside a bubble
  )else(
    # water
    holding breath
  )
end

script, inside a bubble, begin
  cancel air timer
  if(check tag(tag:need air)) then(
    if(not(hero will move)) then(
      gather party to leader
    )
    set tag(tag:need air, OFF)
  )
end

script, holding breath, begin
  if(check tag(tag:need air timer)) then(
    start air timer(10 + breath bonus)
    set tag(tag: need air timer, OFF)
  )
  set tag(tag:holding breath, ON)
  set tag(tag:need air, ON)
  update hero sprites
  if(read timer(air timer) > 0) then(
    breath memory := read timer(air timer)
  )
end

script, start air timer, secs, begin
  variable(flags)
  flags := timer flag:battle, or, timer flag:critical
  set timer(air timer, secs, 18, @air timer depleted, str:breath, flags)
  $str:breath caption="Breath:"
  show string at(str:breath caption, 0, 190)
  show string at(str:breath, 56, 190)
  breath memory := secs
end

script, cancel air timer, begin
  hide string(str:breath caption)
  hide string(str:breath)
  stop timer(air timer)
  set tag(tag:holding breath, OFF)
  set tag(tag:need air timer, ON)
  update hero sprites
end

script, air timer depleted, begin
  if(current map <> map:Kelp reef && current map <> map:Mersheep Village Interior) then(
    # Wrong map, just quit
    cancel air timer
    exit script
  )
  suspend player
  while(current text box >= 0) do(advance text box)
  flash screen(4)
  wait(1)
  fade screen out(20, 20, 63)
  wait(1)
  fade screen out(0, 0, 30)
  wait(1)
  fade screen out(15, 15, 15)
  wait(1)
  fade screen out(0, 0, 50)
  wait(1)
  fade screen out(0, 0, 0)
  wait(1)
  wait for hero(me)
  teleport to map(map:Kelp Reef, 20, 27)
  cancel air timer
  wait(1)
  fade screen in
  resume player
  if(not(check tag(tag:first breath bonus))) then(
    variable(n)
    n := NPC reference(3)
    walk NPC to Y(n, 29)
    wait for NPC(n)
    walk NPC to X(n, 20)
    wait for NPC(n)
    walk NPC to Y(n, 28)
    wait for NPC(n)
    first breath bonus
    walk NPC(n, south, 1)
    wait for NPC(n)
    set NPC direction(n, right)
  )
 
end

plotscript, first breath bonus, begin
  suspend player
  show text box(689)
  wait for text box
  apply breath bonus(5)
  show text box(690)
  wait for text box
  resume player
  set tag(tag:first breath bonus, ON)
end

plotscript, jelly breath bonus, begin
  suspend player
  show text box(692)
  wait for text box
  show text box(693)
  wait for text box
  apply breath bonus(5)
  delete item(item:PnkJelly)
  while(inventory(item:PnkJelly)) do(
    show text box(694)
    wait for text box
    show text box(693)
    wait for text box
    apply breath bonus(5)
    delete item(item:PnkJelly)
  )
  resume player
end

script, apply breath bonus, amount, begin
  breath bonus += amount
  variable(secs)
  secs := read timer(air timer)
  if(secs > 0) then(
    start air timer(secs + amount)
  )
  animate breath bonus
end

script, animate breath bonus, begin
  play sound(sfx:bub multi)
  variable(sl)
  sl := load attack sprite(90)
  reparent to hero(sl, 0)
  center slice(sl)
  variable(set, fr)
  for(set, 0, 4) do(
    set sprite set number(sl, 90 + set)
    for(fr, 0, 2) do(
      set sprite frame(sl, fr)
      wait(1)
    )
  )
  free slice(sl)
end

script, flash screen, flash color, begin
  variable(sl)
  sl := create rect(0, 0, -1)
  fill parent(sl, true)
  set rect border(sl, border:none)
  set rect bg col(sl, flash color)
  wait(1)
  free slice(sl)
end

plotscript, sheep inn script, begin
  cancel air timer
  set tag(tag:using sheep inn, ON)
  walk hero to X(me, 13)
  wait for hero(me)
  walk hero to Y(me, 25)

  suspend caterpillar
  walk hero to Y(me, 24)
  if(hero by rank(1) >= 0) then(
    walk hero to X(1, 15)
    walk hero to Y(1, 25)
  )
  if(hero by rank(2) >= 0) then(
    walk hero to X(2, 16)
    walk hero to Y(2, 27)
  )
  if(hero by rank(3) >= 0) then(
    walk hero to X(3, 14)
    walk hero to Y(3, 28)
  )
  wait for hero(0)
  set hero direction(0, south)
  wait for hero(1)
  set hero direction(1, west)
  wait for hero(2)
  wait for hero(3)

  set tag(tag:holding breath, OFF)
  update hero sprites

  play song (song:Sleeping Music)
  tweak palette(-40, -40, -10)
  fade screen in
  key wait seconds (11)
  reset palette
  fade screen in
  play song (song:Currents Over Kelp Reef)
  wait (5)
  
  resume caterpillar
  walk hero(me, south, 2)
  wait for hero(me)
  set tag(tag:using sheep inn, OFF)
  set tag(tag:need air timer, ON)
  walk hero(me, south, 1)
  wait for hero(me)
end

plotscript, pink jelly 1, begin
  pink jelly battle(tag:pink jelly 1)
end

plotscript, pink jelly 2, begin
  pink jelly battle(tag:pink jelly 2)
end

plotscript, pink jelly 3, begin
  pink jelly battle(tag:pink jelly 3)
end

plotscript, pink jelly 4, begin
  pink jelly battle(tag:pink jelly 4)
end

plotscript, pink jelly 5, begin
  pink jelly battle(tag:pink jelly 5)
end

plotscript, pink jelly 6, begin
  pink jelly battle(tag:pink jelly 6)
end

script, pink jelly battle, tag, begin
  if(fight formation(131)) then(
    set tag(tag, ON)
  )
end

plotscript, goblins shark approach, begin
  suspend player
  variable(n)
  n := create NPC(11, 12, 41, right)
  variable(spr)
  spr := load small enemy sprite(43)
  reparent to npc(spr, n)
  center slice(spr)
  set NPC ignores walls(n, true)
  set NPC obstructs(n, false)
  walk npc(n, right, 8)
  variable(tog)
  while(npc is walking(n)) do(
    tog := tog ,xor, 1
    set sprite set number(spr, 43+tog)
    wait(2)
  )
  if(fight formation(134)) then(
    set tag(tag:beat goblin shark, ON)
    set tag(tag:pink jelly cluster, ON)
  )
  if(slice is valid(spr)) then(
    free slice(spr)
  )
  delete npc(n)
  if(hero x(me) == 20 && hero y(me) == 27) then(
    # This only happens if the timer runs out in the middle of the goblin shark battle
    if(10 + breath bonus >= 35) then(
      show text box(714)
    )else(
      show text box(715)
    )
    wait for text box
  )
  resume player
end

#---------------------------------------------------------------------------

script, walk hero towards hero, who, to whom, begin
  variable(x1, x2, y1, y2)
  wait for heroes
  x1 := hero x(who)
  y1 := hero y(who)
  x2 := hero x(to whom)
  y2 := hero y(to whom)
  if(x1 << x2) then(walk hero(who, right))
  if(x1 >> x2) then(walk hero(who, left))
  if(y1 << y2) then(walk hero(who, down))
  if(y1 >> y2) then(walk hero(who, up))
end

#---------------------------------------------------------------------------

script, gather party to leader, begin
  variable(i, speed)
  suspend player
  suspend hero walls
  suspend obstruction
  suspend caterpillar
  speed := get hero speed(0)
  while(not(party is gathered)) do(
    for(i, 1, 3) do(
      if(hero by rank(i) >= 0) then(
        set hero speed(i, 5)
        walk hero towards hero(i, i -- 1)
      )
    )
    wait for heroes
    for(i, 1, 3) do(
      if(hero by rank(i) >= 0) then(
        set hero speed(i, speed)
      )
    )
  )
  resume player
  resume hero walls
  resume obstruction
  resume caterpillar
end

script, party is gathered, begin
  variable(i)
  for(i, 1, 3) do(
    if(hero by rank(i) >= 0) then(
      if(hero x(i) <> hero x(0) || hero y(i) <> hero y(0)) then(
        exit returning(false)
      )
    )
  )
  exit returning(true)
end

#---------------------------------------------------------------------------

script, wait for heroes, begin
  variable(i)
  for(i, 0, 3) do(
    if(hero by rank(i) >= 0) then(
      wait for hero(i)
    )
  )
end

#---------------------------------------------------------------------------

plotscript, troll mountain autorun, begin
  update troll mountain parallax
end

script, update troll mountain parallax, begin
  variable(sl, mapw, maph, screenw, screenh, layerw, layerh)
  if(current map <> map:troll mountain) then(
    stop timer(troll mountain parallax timer)
    #(The following is only needed if 'recreate map slices when leaving map' is off)
    sl := lookup slice(sl:map layer 0)
    set slice x(sl, 0)
    set slice y(sl, 0)
    exit script
  )
  mapw := map width * 20
  maph := map height * 20
  screenw := slice width(sprite layer)
  screenh := slice height(sprite layer)
  layerw := mapw / 3  # e.g. 50 * 20 pixels
  layerh := maph / 3  # e.g. 20 * 20 pixels
  sl := lookup slice(sl:map layer 0)
  calculate next camera pixel xy
  set slice x(sl, (next camera pixel x * (mapw -- layerw) / (mapw -- screenw)))
  set slice y(sl, (next camera pixel y * (maph -- layerh) / (maph -- screenh)))
  # Set the script to run again next tick
  set timer(troll mountain parallax timer, 0, 1, @update troll mountain parallax)
end

#---------------------------------------------------------------------------
# TMC's Parallax support scripts from:
# http://rpg.hamsterrepublic.com/ohrrpgce/Scripts:Hero_will_move

script, dir X, dir, begin
  switch (dir) do (
    case (up, down) do (return (0))
    case (right) do (return (1))
    case (left) do (return (-1))
  )
end

script, dir Y, dir, begin
  switch (dir) do (
    case (left, right) do (return (0))
    case (down) do (return (1))
    case (up) do (return (-1))
  )
end

script, trying to move direction, begin
  return (-1)
  if(top menu) then(exit script)
  if (key is pressed(key:right)) then (return (right))
  if (key is pressed(key:left)) then (return (left))
  if (key is pressed(key:down)) then (return (down))
  if (key is pressed(key:up)) then (return (up))
end

# This will return true if hero 0 will start a new step
# this tick because of player input. There are no commands
# that can tell you that directly: you have to figure it out
# by checking keypresses and for obstructions.
# Note: this doesn't handle all edge cases, like multiple NPCs
# on one tile, NPCs over the edge of the map, or the hero already in motion.
script, hero will move, begin
  variable (dir, npc)

  # If a textbox is up or player is suspended, the hero can't move
  if (current textbox > -1 || player is suspended) then (exit returning (false))

  # Check for player input
  dir := trying to move direction
  if (dir == -1) then (exit returning (false)) 

  # If there's a wall in the way, nothing will happen (unless walls are suspended...)
  if (check hero wall(0, dir)) then (exit returning (false))

  # Check for an NPC in the way which you can't step on
  # (this isn't correct either if obstruction is suspended, or other edge cases)
  npc := npc at spot (hero x(0) + dir x(dir), hero y(0) + dir y(dir))
  if (npc && readNPC(npc, NPCstat:activation) <> NPCactivation:stepon) then (exit returning (false))

  # OK, you will start walking in this direction
  return (true)
end

# Guess the direction that the leader will move this tick, or -1 if they won't move.
script, next leader move direction, begin
  if (hero is walking(0)) then (
    return (hero direction(0))
  ) else if (hero will move) then (
    return (trying to move direction)
  ) else (
    return (-1)
  )
end

# Guess the position the leader will move to this tick
script, next leader pixel x, begin
  variable(ret, dir)
  ret := hero pixel x
  dir := next leader move direction
  if (dir <> -1) then (
    ret += get hero speed(0) * dirX(dir)
  )
  return (ret)
end

# Guess the position the leader will move to this tick
script, next leader pixel y, begin
  variable(ret, dir)
  ret := hero pixel y
  dir := next leader move direction
  if (dir <> -1) then (
    ret += get hero speed(0) * dirY(dir)
  )
  return (ret)
end

# Updates the values of the "next camera pixel x/y" global variables.
# Camera following NPCs or slices are not supported!
script, calculate next camera pixel xy, begin
  variable(destx, desty, diff, cam dir, cam speed)
  variable(mapw, maph, screenw, screenh)
  screenw := slice width(sprite layer)
  screenh := slice height(sprite layer)
  mapw := map width * 20
  maph := map height * 20

  next camera pixel x := camera pixel x
  next camera pixel y := camera pixel y
  # Check value of gen(genCameraMode)
  if (read general(45) == 0) then (   # herocam (camera following hero)
    # Offset from the top-left of the hero sprite to the topleft of the screen
    next camera pixel x := next leader pixel x -- (screenw -- 20) / 2
    next camera pixel y := next leader pixel y -- (screenh -- 20) / 2
  ) else if (read general(45) == 2) then (  #pancam
    cam dir := read general(46)
    cam speed := read general(48)
    next camera pixel x += dirX(cam dir) * cam speed
    next camera pixel y += dirY(cam dir) * cam speed
  ) else if (read general(45) == 3) then (  #focuscam
    destx := read general(46)
    desty := read general(47)
    cam speed := read general(48)
    diff := destx -- camera pixel x
    if (abs(diff) <= cam speed) then (
      next camera pixel x := dest x
    ) else (
      next camera pixel x += sign(diff) * cam speed
    )
    diff := desty -- camera pixel y
    if (abs(diff) <= cam speed) then (
      next camera pixel y := dest y
    ) else (
      next camera pixel y += sign(diff) * cam speed
    )
  )

  # Crop to map edge
  if (next camera pixel x < 0) then (next camera pixel x := 0)
  if (next camera pixel x > mapw -- screenw) then (next camera pixel x := mapw -- screenw)
  if (next camera pixel y < 0) then (next camera pixel y := 0)
  if (next camera pixel y > maph -- screenh) then (next camera pixel y := maph -- screenh)
end

#---------------------------------------------------------------------------

plotscript, tenpepper, begin
  # Not intended for real gameplay, this debugging item changes the hero's walking speed.
  set hero speed(0, 10)
end

plotscript, fourpepper, begin
  # Not intended for real gameplay, this debugging item changes the hero's walking speed.
  set hero speed(0, 4)
end

script, update battle pause on menus, begin
  set active battle pause on all menus(check tag(tag:battle wait))
end

plotscript, update battle pause on menus with info, begin
  update battle pause on menus
  set menu bit(top menu, menubit:no controls, true)
  if(check tag(tag:battle wait)) then(
    show text box(591)
  )else(
    show text box(592)
  )
  wait for text box
  set menu bit(top menu, menubit:no controls, false)
end

#---------------------------------------------------------------------------

plotscript, notice flanat weapon shop, begin
  suspend player
  set hero direction(me, north)
  wait(3)
  show text box(593)
  wait for text box
  resume player
end

#---------------------------------------------------------------------------

plotscript, visited hasim castle, begin
  set tag(tag:visited hasim castle, ON)
end

plotscript, cart from monastery to flanat, begin
  friar harvey ID := 20
  friar cart ID := 21
  
  if(not(pay money(5))) then(
    show text box(604)
    wait for text box
    exit script
  )
  suspend player
  suspend random enemies
  
  set friar cart obstruction(false)
  
  # Get the party in position
  walk hero to Y(me, 66)
  wait for hero(me)
  walk hero to X(me, 17)
  wait for hero(me)
  walk hero to X(me, 13 + room in active party)
  wait for hero(me)
  walk hero to X(me, 16)
  wait for hero(me)
  suspend caterpillar
  
  mount friar cart
  
  variable(friar)
  friar := NPC reference(friar harvey ID)
  focus camera(NPC X(friar), NPC Y(friar), 10)
  wait for camera
  camera follows NPC(friar)
  
  walk friar cart(east, 1)
  walk friar cart(south, 5)
  walk friar cart(west, 3)
  walk friar cart(south, 1)
  walk friar cart(west, 3)
  walk friar cart(south, 1)
  walk friar cart(west, 1)
  walk friar cart(south, 8)
  walk friar cart(east, 1)
  walk friar cart(south, 1)
  walk friar cart(east, 1)
  walk friar cart(south, 6)
  walk friar cart(east, 2)
  walk friar cart(south, 6)
  walk friar cart(east, 16)
  walk friar cart(north, 1)
  walk friar cart(east, 8)
  walk friar cart(south, 2)
  walk friar cart(east, 2)
  walk friar cart(south, 1)
  suspend NPC walls # last step has a wall
  walk friar cart(east, 6)
  resume NPC walls
  
  # Move to Flanat Map
  fade screen out
  wait(1)
  teleport to map(0, 5, 6)
  friar harvey ID := 24
  friar cart ID := 25
  quick mount friar cart
  put friar cart(4, 5)
  suspend NPCs
  set friar cart obstruction(false)
  # Update camera following
  friar := NPC reference(friar harvey ID)
  camera follows NPC(friar)
  wait(1)
  fade screen in

  suspend NPC walls # last cart starts in a wall
  walk friar cart(east, 2)
  
  variable(jake)
  jake := NPC reference(6)
  walk NPC(jake, north, 1)
  set NPC direction(jake, west)
  resume NPC walls

  walk friar cart(east, 2)
  walk friar cart(south, 1)
  set NPC direction(jake, south)
  walk friar cart(east, 4)
  set NPC direction(jake, east)
  walk friar cart(east, 2)
  walk friar cart(south, 4)
  walk friar cart(east, 6)
  walk friar cart(south, 6)
  walk friar cart(west, 1)
  walk friar cart(south, 1)
  walk friar cart(east, 4)
  set NPC direction(friar, west)
  set NPC direction(NPC reference(friar cart ID, 3), east)
  set NPC direction(jake, south)

  variable(cart)
  cart := NPC reference(friar cart ID, 0)
  focus camera(NPC X(cart), NPC Y(cart), 10)
  wait for camera

  dismount friar cart
  
  set friar cart obstruction(true)
  
  resume player
  resume random enemies
  resume caterpillar
  resume NPCs
end

plotscript, cart from flanat to monastery, begin
  friar harvey ID := 24
  friar cart ID := 25
  
  if(not(pay money(5))) then(
    show text box(604)
    wait for text box
    exit script
  )
  suspend player
  suspend random enemies
  suspend NPCs
  suspend obstruction
  
  set friar cart obstruction(false)
  
  # Get the party in position
  if(hero Y(me) <= 16) then(
    walk hero to X(me, 24)
    wait for hero(me)
  )
  if(hero X(me) >= 24) then(
    walk hero to Y(me, 18)
    wait for hero(me)
  )
  walk hero to X(me, 19 + room in active party)
  wait for hero(me)
  walk hero to X(me, 22)
  wait for hero(me)
  suspend caterpillar
  
  mount friar cart
  
  variable(friar)
  friar := NPC reference(friar harvey ID)
  focus camera(NPC X(friar), NPC Y(friar), 10)
  wait for camera
  camera follows NPC(friar)

  variable(jake)
  jake := NPC reference(6)
  set NPC speed(jake, 10)
  walk NPC(jake, north, 8)
  set NPC direction(jake, south)
  
  walk friar cart(north, 7)
  walk friar cart(west, 9)
  walk friar cart(north, 4)
  walk friar cart(west, 6)
  walk friar cart(north, 1)
  suspend NPC walls # last step has a wall
  walk friar cart(west, 8)
  resume NPC walls
  
  # Move to Flanat Castle Area Map
  fade screen out
  wait(1)
  teleport to map(1, 43, 94)
  friar harvey ID := 20
  friar cart ID := 21
  quick mount friar cart
  put friar cart(43, 95, -1)
  suspend NPCs
  set friar cart obstruction(false)
  # Update camera following
  friar := NPC reference(friar harvey ID)
  camera follows NPC(friar)
  wait(1)
  fade screen in

  suspend NPC walls # last cart starts in a wall
  walk friar cart(west, 2)
  resume NPC walls
  
  walk friar cart(north, 1)
  walk friar cart(west, 2)
  walk friar cart(north, 2)
  walk friar cart(west, 8)
  walk friar cart(south, 1)
  walk friar cart(west, 16)
  walk friar cart(north, 12)
  walk friar cart(west, 3)
  walk friar cart(north, 1)
  walk friar cart(west, 1)
  walk friar cart(north, 8)
  walk friar cart(east, 1)
  walk friar cart(north, 1)
  walk friar cart(east, 3)
  walk friar cart(north, 1)
  walk friar cart(east, 3)
  walk friar cart(north, 3)
  walk friar cart(west, 5)
  walk friar cart(north, 2)
  walk friar cart(east, 4)
  set NPC direction(NPC reference(friar cart ID, 3), east)

  variable(cart)
  cart := NPC reference(friar cart ID, 0)
  focus camera(NPC X(cart), NPC Y(cart), 10)
  wait for camera

  dismount friar cart
  
  set friar cart obstruction(true)
  
  resume player
  resume random enemies
  resume caterpillar
  resume NPCs
  resume obstruction
end

script, walk friar cart, dir, dist, begin
  variable(friar, cart, iter, cart num, dest NPC, last dir, rider)
  friar := NPC reference(friar harvey ID)
  set NPC speed(friar, 10)
  set NPC speed(NPC reference(friar cart ID), 10)
  for(iter, 1, dist) do(
    walk NPC(friar, dir, 1)
    last dir := dir
    for(cart num, 0, 3) do(
      cart := NPC reference(friar cart ID, cart num)
      if(cart num == 0)
        then(dest NPC := friar)
        else(dest NPC := NPC reference(friar cart ID, cart num -- 1))
      walk NPC to X(cart, NPC X(dest NPC))
      walk NPC to Y(cart, NPC Y(dest NPC))
      rider := lookup slice(sli:walkabout extra, get NPC slice(cart))
      if(rider) then(
        set sprite frame(rider, last dir * 2)
      )
      last dir := NPC direction(cart)
    )
    wait for NPC(friar)
  )
end

script, put friar cart, dest x, dest y, offset=1, begin
  variable(friar, cart, i)
  friar := NPC reference(friar harvey ID)
  set NPC position(friar, dest x, dest y)
  set NPC direction(friar, south)
  for(i, 0, 3) do(
    cart := NPC reference(friar cart ID, i)
    set NPC position(cart, dest x -- offset -- (i * offset), dest y)
    set NPC direction(cart, east)
  )
end

script, set friar cart obstruction, val, begin
  variable(friar, cart, i)
  friar := NPC reference(friar harvey ID)
  set NPC obstructs(friar, val)
  for(i, 0, 3) do(
    cart := NPC reference(friar cart ID, i)
    set NPC obstructs(cart, val)
  )
end

script, mount friar cart, begin
  quick mount friar cart
  # Animate the mounting
  variable(cart, who, hero pic, cart pic, sl)
  for(who, 0, 3) do(
    if(hero by rank(who) >= 0) then(
      cart := NPC reference(friar cart ID, who)
      sl := lookup slice(sli:walkabout extra, get NPC slice(cart))
      set slice y(sl, 20)
      move slice by(sl, 0, -28, 4)
    )
  )
  wait(4)
end

script, quick mount friar cart, begin
  # Mount the carts with no animation
  variable(cart, who, hero pic, cart pic, sl)
  for(who, 0, 3) do(
    if(hero by rank(who) >= 0) then(
      cart := NPC reference(friar cart ID, who)
      hero pic := lookup slice(sl:walkabout sprite component, get hero slice(who))
      cart pic := lookup slice(sl:walkabout sprite component, get npc slice(cart))
      sl := clone sprite(hero pic)
      set slice lookup(sl, sli:walkabout extra)
      set parent(sl, cart pic)
      set slice y(sl, -8)
      set slice visible(hero pic, false)
    )
  )
end

script, dismount friar cart, begin
  # Dismount the carts
  variable(cart, who, sl, hero pic)
  for(who, 0, 3) do(
    if(hero by rank(who) >= 0) then(
      cart := NPC reference(friar cart ID, who)
      sl := lookup slice(sli:walkabout extra, get npc slice(cart))
      free slice(sl)
      set hero position(who, NPC X(cart), NPC Y(cart))
      hero pic := lookup slice(sl:walkabout sprite component, get hero slice(who))
      set slice visible(hero pic, true)
      walk hero(who, south, 1)
    )
  )
  camera follows hero(me)
  wait for hero(me)
end

#---------------------------------------------------------------------------

plotscript,Rolf Inn,begin
  variable(i)

  suspend player
  suspend random enemies
  suspend hero walls

  walk hero to X(me, 66)
  wait for hero(me)
  walk hero to Y(me, 33)
  wait for hero(me)
  walk hero to X(me, 68)
  wait for hero(me)
  
  for (i,0,3) do(
    set hero direction (i,south)
  )

  play song (song:Sleeping Music)
  tweak palette (-40, -40, -10)
  fade screen in

  key wait (18 * 8)
  reset palette
  fade screen in
  play song (song:Castle Theme)
  wait (5)

  for (i,0,2) do(
    set hero direction (i,east)
  )
  set hero direction(3, north)

  walk hero (me,south,2)
  wait for hero (me)
  walk hero (me,west,1)
  wait for hero (me)

  resume player
  resume random enemies
  resume hero walls
end

#---------------------------------------------------------------------------

plotscript,Monastery Inn,begin
  suspend player
  suspend NPCs
  suspend hero walls
  suspend obstruction
  focus camera(32, 19, 1)
  
  suspend caterpillar

  walk hero to X(0, 29)
  walk hero to X(1, 31)
  walk hero to X(2, 33)
  walk hero to X(3, 35)
  walk NPC to X(3, 32)
  
  variable(who, ready)
  while(true) do(
    ready := true
    for(who, 0, 3) do(
      if(hero by rank(who) >= 0) then(
        if(hero is walking(who)) then(
          ready := false
        )else(
          walk hero to Y(who, 18)
        )
      )
    )
    if(NPC is walking(3)) then(
      ready := false
    )else(
      walk NPC to Y(3, 22)
    )
    if(ready) then(break)
    wait(1)
  )
  
  for (who,0,3) do(
    walk hero(who, east, 1)
  )
  

  for (who,0,3) do(
    wait for hero(who)
    set hero direction(who, south)
  )

  play song (song:Sleeping Music)
  tweak palette (-40, -40, -10)
  fade screen in

  key wait (18 * 8)
  reset palette
  fade screen in
  play song (song:Church Hymn)
  wait (5)

  walk NPC to Y(3, 20)

  for (who,0,3) do(
    walk hero(who, west, 1)
  )
  wait for hero(me)

  for (who,0,3) do(
    walk hero(who, south, 1)
  )
  wait for hero(me)

  walk NPC to X(3, 30)
    
  for (who,0,3) do(
    walk hero to X(who, 32 + who)
  )
  for (who,0,3) do(
    wait for hero(who)
  )

  set hero direction(0, south)
  for (who,1,3) do(
    set hero direction(who, west)
  )
  resume caterpillar
  
  focus camera(hero X(me), hero Y(me), 4)
  wait for camera
  camera follows hero(me)

  resume player
  resume NPCs
  resume hero walls
  resume obstruction
end

#---------------------------------------------------------------------------

plotscript, use the outhouse, begin
  suspend player
  suspend caterpillar
  show text box(617)
  set hero direction(0, south)
  
  wait(5)
  
  variable(who)
  for(who, 1, 3) do(
    walk hero to X(who, hero X(0))
  )

  variable(ready)
  while(true) do(
    ready := true
    for(who, 1, 3) do(
      if(hero by rank(who) >= 0) then(
        if(hero is walking(who)) then(
          ready := false
        )else(
          walk hero to Y(who, hero Y(0) + 3)
        )
      )
    )
    if(ready) then(break)
    wait(1)
  )

  for(who, 1, 3) do(
    wait for hero(who)
  )
  
  wait for text box
  
  fade screen out
  wait(5)
  fade screen in
  wait(1)
  
  walk hero(1, north, 1)
  walk hero(0, south, 1)
  
  wait for hero(1)
  wait for hero(0)
  set hero direction(0, west)
  
  resume caterpillar
  resume player
  
end

#---------------------------------------------------------------------------

plotscript, dusty says this is my house, begin
  if(check tag(tag:dusty left angry)) then(
    exit script
  )
  suspend player
  show text box(138)
  wait for text box
  resume player
end

#---------------------------------------------------------------------------

plotscript, stress cat battle, begin
  if(check tag(tag:got dusty) == false || check tag(tag:took dusty home) == false) then(
    # Never got Dusty, or failed to take him home; cannot battle stress cat.
    show text box(620)
    wait for text box
    exit script
  )
  if(check tag(tag:battled stress cat) == true) then(
    show text box(619)
    wait for text box
    fight formation(114)
    exit script
  )
  # First stress cat battle, can get Whisker item
  show text box(141)
  wait for text box
  if(fight formation(67)) then(
    # If you ran away, don't count this battle
    set tag(tag:battled stress cat, true)
  )
end

#---------------------------------------------------------------------------

plotscript, stress cat couch action, begin
  if(check tag(tag:got dusty) == false) then(
    show text box(618)
  )else if(check tag(tag:took dusty home) == false) then(
    show text box(618)
  )else(
    show text box(140)
  )
end


#---------------------------------------------------------------------------

plotscript, troll mountain map, begin
  show text box(621)
end

#---------------------------------------------------------------------------

plotscript, troll mountain campfire, begin
  suspend player
  suspend random enemies
  suspend NPCs
  suspend obstruction
  suspend hero walls
  suspend caterpillar
  
  variable(x, y)
  x := 90
  y := 20
  walk hero to X(0, x -- 1)
  walk hero to Y(0, y)
  walk hero to X(1, x)
  walk hero to Y(1, y + 1)
  walk hero to X(2, x + 1)
  walk hero to Y(2, y)
  walk hero to X(3, x)
  walk hero to Y(3, y -- 1)
  variable(who)
  for(who, 0, 3) do(
    wait for hero(who)
  )
  set hero direction(0, east)
  set hero direction(1, north)
  set hero direction(2, west)
  set hero direction(3, south)
  wait(1)

  resume player
  resume random enemies
  resume NPCs
  resume obstruction
  resume hero walls
  resume caterpillar
  
  fade and rest
end

#---------------------------------------------------------------------------

plotscript, broaste courtyard inn focus, begin
  suspend player
  show text box(631)
  wait for text box
  focus camera(21, 7, 5)
  show text box(633)
  wait for text box
  wait for camera
  focus camera(hero X(me), hero Y(me) 20)
  wait for camera
  camera follows hero(me)
  resume player
end

#---------------------------------------------------------------------------

plotscript, rock owl flight, begin
  if(inventory(item:trollegg) == 0) then(
    show text box(641)
    wait for text box
    exit script
  )
  delete item(item:trollegg, 1)
  if(hero X(me) < map width / 2) then(
    rock owl flight west to east
  )else(
    rock owl flight east to west
  )
end

script, owl picks up the party, owl, begin
  set NPC speed(owl, 5)
  variable(who)
  for(who, 0, 3 -- room in active party) do(
    owl picks up hero(owl, who)
  )
end

script, owl picks up hero, owl, who, begin
  walk NPC to X(owl, hero X(who))
  walk NPC to Y(owl, hero Y(who) -- (who + 1))
  wait for NPC(owl)
  put npc(owl, NPC pixel X(owl), NPC pixel Y(owl) + 3)
  wait(1)
  put npc(owl, NPC pixel X(owl), NPC pixel Y(owl) -- 3)
  attach hero sprite to owl(owl, who)
end

script, attach hero sprite to owl, owl, who, begin
  variable(owl sl, hero sl, sl)
  owl sl := get owl sl(owl)
  hero sl := lookup slice(sl:walkabout sprite component, get hero slice(who))
  set sprite visible(hero sl, false)
  sl := clone sprite(hero sl)
  set slice lookup(sl, sli:walkabout extra)
  set sprite frame(sl, hero direction(who) * 2)
  set parent(sl, owl sl)
  set slice y(sl, (who + 1) * 16)
end

script, move owl to, guide, owl, tile x, tile y, ticks, flap, begin
  move slice to(guide, tile x*20, tile y*20, ticks)
  while(slice is moving(guide)) do(
    put npc(owl, slice x(guide), slice y(guide))
    update troll mountain parallax
    if(flap) then(
      flap owl wings(owl)
    )else(
      owl glide(owl)
    )
    wait(1)
  )
end

script, get owl sl, owl, begin
  exit returning(lookup slice(sl:walkabout sprite component, get NPC slice(owl)))
end

script, flap owl wings, owl, begin
  variable(owl sl, wings sl)
  owl sl := get owl sl(owl)
  wings sl := lookup slice(sli:wings, owl sl)
  loop frame(wings sl, 0, 2)
end

script, owl glide, owl, begin
  variable(owl sl, wings sl)
  owl sl := get owl sl(owl)
  wings sl := lookup slice(sli:wings, owl sl)
  set sprite frame(wings sl, 0)
end

script, owl drops party, owl, begin
  focus camera(NPC X(owl), NPC Y(owl) + 4, 6)
  variable(who, owl sl, hero sl, sl)
  owl sl := get owl sl(owl)
  for(who, 0, 3) do(
    sl := lookup slice(sli:walkabout extra, owl sl)
    if(not(sl)) then(break)
    set slice lookup(sl, none)
    move slice by(sl, 0, 80 -- slice y(sl), 5)
  )
  wait(5)
  free slice children(owl sl)
  move slice to(owl sl, 0, 0, 4)
  for(who, 0, 3) do(
    set hero position(who, NPC X(owl), NPC Y(owl) + 4)
    hero sl := lookup slice(sl:walkabout sprite component, get hero slice(who))
    set slice visible(hero sl, true)
  )
  wait for camera
  camera follows hero(me)
end

script, recreate owls, begin
  variable(owl)
  owl := create NPC(23, 138, 48)
  set NPC direction(owl, left)
  owl := create NPC(23, 5, 53)
  set NPC direction(owl, right)
end

script, make owl guide, owl, begin
  variable(guide, campoint)
  guide := create container(0, 0)
  set parent(guide, lookup slice(sl:walkabout layer))
  put slice(guide, npc pixel x(owl), npc pixel y(owl))

  campoint := create container(0, 0)
  set parent(campoint, guide)
  set slice x(campoint, 10)
  set slice y(campoint, 10)
  camera follows slice(campoint)
  exit returning(guide)
end

script, rock owl flight west to east, begin
  suspend player
  suspend caterpillar
  
  variable(owl)
  owl := NPC reference(23, 0)
  set NPC obstructs(owl, false)
  set NPC ignores walls(owl, true)
  delete NPC(NPC reference(23, 1))
  
  make flapping owl overlay(owl)
    
  owl picks up the party(owl)
  set NPC direction(owl, north)

  focus camera(NPC X(owl), NPC Y(owl), 10)
  wait for camera

  variable(guide)
  guide := make owl guide(owl)

  move owl to(guide, owl, 46, 32, 2*18, true)
  move owl to(guide, owl, 75, 22, 2*18, true)
  move owl to(guide, owl, 106, 32, 2*18, false)
  move owl to(guide, owl, 138, 46, 2*18, false)

  free slice(guide)
  
  owl drops party(owl)
  resume caterpillar
  walk hero(me, left, 1)
  walk NPC to X(owl, 138)
  walk NPC to Y(owl, 47)
  wait for NPC(owl)
  delete NPC(owl)
  recreate owls
  
  resume player
end

script, rock owl flight east to west, begin
  suspend player
  suspend caterpillar
  
  variable(owl)
  owl := NPC reference(23, 1)
  set NPC obstructs(owl, false)
  set NPC ignores walls(owl, true)
  delete NPC(NPC reference(23, 0))
  
  make flapping owl overlay(owl, true)
    
  owl picks up the party(owl)
  set NPC direction(owl, south)

  focus camera(NPC X(owl), NPC Y(owl), 10)
  wait for camera

  variable(guide)
  guide := make owl guide(owl)

  move owl to(guide, owl, 106, 32, 2*18, true)
  move owl to(guide, owl, 75, 22, 2*18, true)
  move owl to(guide, owl, 46, 32, 2*18, false)
  move owl to(guide, owl, 9, 50, 2*18, false)

  free slice(guide)
  
  owl drops party(owl)
  resume caterpillar
  walk hero(me, left, 1)
  walk NPC to X(owl, 5)
  walk NPC to Y(owl, 53)
  wait for NPC(owl)
  delete NPC(owl)
  recreate owls
  
  resume player
end

script, make flapping owl overlay, owl, flip=false, begin
  variable(owl sl, wing sl)
  owl sl := get owl sl(owl)
  wing sl := load attack sprite(84)
  set slice lookup(wing sl, sli:wings) 
  set parent(wing sl, owl sl)
  center slice(wing sl)
  horiz flip sprite(wing sl, flip)
end

#---------------------------------------------------------------------------

plotscript, fight louis and brickson, begin
  if(fight formation(135)) then(
    cancel air timer
    suspend caterpillar
    suspend player
    # Put Louis on the anchor chain 
    set npc position(14, 57, 19)
    # Make Brickson sideways
    alter npc(15, NPCStat:picture, 84)
    set npc ignores walls(15, true)
    # Make Bob and Gisli back up to the air bubble
    walk hero to x(0, 51)
    set hero direction(0, right)
    walk hero to x(1, 50)
    set hero direction(1, right)
    # Make Brickson slide backwards
    walk npc(15, right, 1)
    set npc direction(15, left)
    wait for npc(15)
    # Then brickson falls
    set npc speed(15, 1)
    walk npc(15, down, 40)
    # Let hero movement finish if it has not already
    wait for hero(1)
    # make Brickson spin a little
    brickson spin(4)
    # Mr Louis reacts
    set npc direction(14, south)
    show text box(711)
    brickson spin(4)
    wait for text box
    show text box(712)
    resume caterpillar
    brickson spin(4)
    wait for text box
    # Mr Louis runs away
    walk npc to y(14, 0)
    brickson spin(20)
    # Done
    resume player
    resume caterpillar
    set tag(tag:Beat Brickson, ON)
  )
end

script, brickson spin, n=1, begin
  variable(i)
  for(i, 1, n) do(
    wait(3)
    variable(d)
    d := (npc direction(15) + 1) ,mod, 4
    set npc direction(15, d)
  )
end

plotscript, climb out of mersheep village, begin
  suspend player
  cancel air timer
  set hero speed(me, 5)
  suspend hero walls
  walk hero to x(me, 57)
  walk hero to y(me, 20)
  wait for hero(me)
  pan camera(up, 4, 2)
  walk hero(me, north, 8)
  wait for hero(me)
  fade screen out
  wait(1)
  set hero speed(me, 4)
  camera follows hero(me)
  resume hero walls
  resume player
  cancel air timer
  board the unfortunate turtle from mersheep village
end

script, board the unfortunate turtle from mersheep village, begin
  teleport to map(map:deck of the unfortunate turtle, 30, 34)
  suspend player
  wait(1)
  fade screen in
  suspend hero walls
  set hero speed(me, 10)
  walk hero(me, north, 1)
  wait for hero(me)
  walk hero(me, north, 1)
  walk hero(me, west, 1)
  wait for hero(me)
  walk hero(me, south, 1)
  walk hero(me, west, 1)
  wait for hero(me)
  set hero speed(me, 4)
  walk hero(me, west, 1)
  wait for hero(me)
  if(check tag(tag:boarded pirate ship) == OFF) then(
    first boarding of the unfortunate turtle
  )
  resume hero walls
  resume player
end

script, first boarding of the unfortunate turtle, begin
  walk hero(me, left, 2)
  set tag(tag:boarded pirate ship, ON)
  pan camera(left, 3, 4)
  wait for camera
  variable(louis)
  louis := npc reference(0)
  set npc direction(louis, right)
  wait(2)
  show text box(717)
  set npc speed(louis, 10)
  walk npc(louis, up, 1)
  set npc direction(louis, right)
  wait for npc(louis)
  walk npc(louis, down, 1)
  set npc direction(louis, right)
  wait for npc(louis)
  wait for text box
  pan camera(up, 6, 2)
  pathfind npc to(louis, 18, 20)
  wait(10)
  set hero direction(0, up)
  wait(1)
  set hero direction(1, up)
  show text box(718)
  wait(20)
  advance text box
  variable(pirate1, pirate2, pirate3)
  pirate1 := npc reference(1,0)
  pirate2 := npc reference(1,1)
  pirate3 := npc reference(1,2)
  pathfind npc to(pirate1, 24, 33)
  pathfind npc to(pirate2, 25, 32)
  pathfind npc to(pirate3, 26, 32)
  wait(20)
  pan camera(down, 3, 2)
  wait for npc(pirate1)
  wait for npc(pirate2)
  wait for npc(pirate3)
  fight formation(136)
  focus camera(hero x(me), hero y(me), 4)
  npc dissolve(pirate1)
  wait(1)
  npc dissolve(pirate2)
  wait(1)
  npc dissolve(pirate3)
  wait for npc dissolve(pirate1)
  destroy npc(pirate1)
  wait for npc dissolve(pirate2)
  destroy npc(pirate2)
  wait for npc dissolve(pirate3)
  destroy npc(pirate3)
  show text box(722)
  set hero direction(0, right)
  set hero direction(1, left)
  wait for text box
  camera follows hero(me)
  set tag(tag: beat 3 pirate battle, ON)
end

plotscript, bearbeak and tuxbeard come out, begin
  suspend player
  set tag(tag: bearbeak appears, ON)
  variable(tuxbeard, bearbeak)
  tuxbeard := NPC reference(2)
  bearbeak := NPC reference(3)
  set npc position(tuxbeard, 22, 25)
  set npc position(bearbeak, 22, 25)
  walk npc(tuxbeard, south, 1)
  wait for npc(tuxbeard)

  set npc obstructs(tuxbeard, false)
  pathfind npc to(tuxbeard, 22, 29)
  pathfind npc to(bearbeak, 21, 29)
  wait for npc(bearbeak)
  set npc obstructs(tuxbeard, true)

  while(not(tuxbeard and bearbeak block the way)) do(
    wait for npc(tuxbeard)
  )
  resume player
end

plotscript, unfortunate turtle each step, begin
  if(check tag(tag:bearbeak appears) == ON && check tag(tag:beat bearbeak) == OFF) then(
    tuxbeard and bearbeak block the way
  )
end

script, tuxbeard and bearbeak block the way, begin
  variable(tuxbeard, bearbeak, x, x1, x2)
  tuxbeard := NPC reference(2)
  bearbeak := NPC reference(3)
  set npc speed(tuxbeard, 5)
  set npc speed(bearbeak, 5)
  x := hero x(me)
  x1 := npc x(bearbeak)
  x2 := npc x(tuxbeard)
  if(x < x1) then(
    walk npc(bearbeak, west, 1)
    set npc direction(bearbeak, south)
    walk npc(tuxbeard, west, 1)
    set npc direction(tuxbeard, south)
  )else if(x > x2) then(
    walk npc(tuxbeard, east, 1)
    set npc direction(tuxbeard, south)
    walk npc(bearbeak, east, 1)
    set npc direction(bearbeak, south)
  )
  # Return true if they are close enough to be blocking
  exit returning(x > x1 -- 1 && x < x2 + 1)
end

plotscript, tuxbeard and bearbeak battle, begin
  suspend player
  variable(tuxbeard, bearbeak)
  tuxbeard := NPC reference(2)
  bearbeak := NPC reference(3)
  show text box(724) # Bob
  wait for text box

  show text box(725) # Tuxbeard
  jiggle npc(tuxbeard, 3)
  wait for text box

  resume player
end

#---------------------------------------------------------------------------

script, loop frame, sl, first, last, begin
  variable(fr)
  fr := get sprite frame(sl)
  fr += 1
  if(fr < first) then(fr := first)
  if(fr > last) then(fr := first)
  set sprite frame(sl, fr)
end

script, loop frame set, sl, first, last, begin
  variable(fr)
  fr := get sprite set number(sl)
  fr += 1
  if(fr < first) then(fr := first)
  if(fr > last) then(fr := first)
  set sprite set number(sl, fr)
end

script, npc dissolve, npc, begin
  variable(sl, pic)
  sl := get npc slice(npc)
  pic := lookup slice(sl:walkabout sprite component, sl)
  dissolve sprite(pic, dissolve:flicker, 18)
end

script, wait for npc dissolve, npc, begin
  variable(sl, pic)
  sl := get npc slice(npc)
  pic := lookup slice(sl:walkabout sprite component, sl)
  wait for dissolve(pic)
end


script, jiggle npc, npc, count=1, begin
  variable(i, x, y)
  x := npc pixel x(npc)
  y := npc pixel y(npc)
  for(i, 1, count) do(
    put npc(npc, x, y -- 2)
    wait(1)
    put npc(npc, x, y -- 4)
    wait(1)
    put npc(npc, x, y -- 2)
    wait(1)
    put npc(npc, x, y -- 0)
    wait(1)
  )
end

#---------------------------------------------------------------------------

plotscript, skill point bean 1, begin
  skill point bean(0, item:BlueBean)
end

plotscript, skill point bean 2, begin
  skill point bean(1, item:RedBean)
end

plotscript, skill point bean 3, begin
  skill point bean(2, item:TealBean)
end

plotscript, skill point bean 4, begin
  skill point bean(3, item:TanBean)
end

plotscript, skill point bean 5, begin
  skill point bean(4, item:PinkBean)
end

plotscript, skill point bean 6, begin
  skill point bean(5, item:PuceBean)
end

plotscript, skill point bean 7, begin
  skill point bean(6, item:GrayBean)
end

plotscript, skill point bean 8, begin
  skill point bean(7, item:GoldBean)
end

script, skill point bean, lev, item, begin
  # Set globals for display in text boxes
  skill point level display := lev + 1
  get item name(str:intobox, item)
  # Check if Bob is really in the active party
  variable(who)
  who := find hero(hero:Bob the Hamster)
  if (who == -1 || who > 3) then(
    # Bob is not in the active party
    show text box(657)
    exit script
  )
  # Check to see if Bob can use this Skill Point level at all yet
  variable(max)
  max := get level mp(who, lev, maximum stat)
  if(max <= 0) then(
    show text box(677)
    exit script
  )
  while(true) do(
    # Loop while we want to keep eating beans
    variable(cur)
    cur := get level mp(who, lev, current stat)
    if(cur >= max) then(
      # This level of skill points is already full
      show text box(658)
      exit script
    )
    # Remove the item, and restore the skill point
    delete item(item)
    set level mp(who, lev, cur + 1)
    show text box(659)
    wait for text box
    # Set globals for display in the next text box
    skill point bean count := inventory(item)
    skill point cur := get level mp(who, lev, current stat)
    skill point max := max
    show text box(668)
    wait for text box
    if(check tag(tag:eat another bean) == OFF) then(exit script)
  )
end

#---------------------------------------------------------------------------

script, large, n1, n2, begin
  if(n1 > n2) then(exit returning(n1)) else(exit returning(n2))
end

script, small, n1, n2, begin
  if(n1 < n2) then(exit returning(n1)) else(exit returning(n2))
end

#---------------------------------------------------------------------------

